   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.tsk1,"ax",%progbits
  18              		.align	2
  19              		.global	tsk1
  20              		.code	16
  21              		.thumb_func
  23              	tsk1:
  24              	.LFB68:
  25              		.file 1 "../Tasks/MntrTest/RWR/Tasks.c"
   1:../Tasks/MntrTest/RWR/Tasks.c **** #include "R_RTOS_services.h"
   2:../Tasks/MntrTest/RWR/Tasks.c **** #include "PortFunc.h"
   3:../Tasks/MntrTest/RWR/Tasks.c **** #include "TimerFunc.h"
   4:../Tasks/MntrTest/RWR/Tasks.c **** 
   5:../Tasks/MntrTest/RWR/Tasks.c **** #include "R_RTOS_task.h"
   6:../Tasks/MntrTest/RWR/Tasks.c **** #include "R_RTOS_timer.h"
   7:../Tasks/MntrTest/RWR/Tasks.c **** 
   8:../Tasks/MntrTest/RWR/Tasks.c **** extern void tsk_EndTheTask( void );
   9:../Tasks/MntrTest/RWR/Tasks.c **** extern SysFkt sys_SysFkt[AMOUNT_SYS_FKT ];
  10:../Tasks/MntrTest/RWR/Tasks.c **** 
  11:../Tasks/MntrTest/RWR/Tasks.c **** extern TskTCB tsk_AR[];
  12:../Tasks/MntrTest/RWR/Tasks.c **** 
  13:../Tasks/MntrTest/RWR/Tasks.c **** extern PTskTCB p_cur_tsk_tcb;
  14:../Tasks/MntrTest/RWR/Tasks.c **** 
  15:../Tasks/MntrTest/RWR/Tasks.c **** void tsk1( void );
  16:../Tasks/MntrTest/RWR/Tasks.c **** void tsk2( void );
  17:../Tasks/MntrTest/RWR/Tasks.c **** void tsk3( void );
  18:../Tasks/MntrTest/RWR/Tasks.c **** 
  19:../Tasks/MntrTest/RWR/Tasks.c **** void tsk1( void )
  20:../Tasks/MntrTest/RWR/Tasks.c **** {
  26              		.loc 1 20 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 84B0     		sub	sp, sp, #16
  33              		.cfi_def_cfa_offset 24
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  21:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_LOW(PIN_LED0);
  36              		.loc 1 21 0
  37 0006 564B     		ldr	r3, .L20
  38 0008 5A69     		ldr	r2, [r3, #20]
  39 000a 8023     		mov	r3, #128
  40 000c 5B00     		lsl	r3, r3, #1
  41 000e 1340     		and	r3, r2
  42 0010 06D0     		beq	.L3
  43              		.loc 1 21 0 is_stmt 0 discriminator 1
  44 0012 534B     		ldr	r3, .L20
  45 0014 524A     		ldr	r2, .L20
  46 0016 9268     		ldr	r2, [r2, #8]
  47 0018 8021     		mov	r1, #128
  48 001a 4900     		lsl	r1, r1, #1
  49 001c 0A43     		orr	r2, r1
  50 001e 9A60     		str	r2, [r3, #8]
  51              	.L3:
  22:../Tasks/MntrTest/RWR/Tasks.c ****     svc_mntr_ReqReadAccs((const MntrNr)0x0u, p_cur_tsk_tcb);
  52              		.loc 1 22 0 is_stmt 1
  53 0020 504B     		ldr	r3, .L20+4
  54 0022 1B68     		ldr	r3, [r3]
  55 0024 FB60     		str	r3, [r7, #12]
  56              	.LBB38:
  57              	.LBB39:
  58              		.file 2 "../include/R_RTOS_services.h"
   1:../include/R_RTOS_services.h **** /**
   2:../include/R_RTOS_services.h ****  * \file    R_RTOS_services.h
   3:../include/R_RTOS_services.h ****  * \author  Christian Neuberger (NeubergerCh50344@th-nuernberg.de)
   4:../include/R_RTOS_services.h ****  * \date    18.12.2015
   5:../include/R_RTOS_services.h ****  *
   6:../include/R_RTOS_services.h ****  * \brief Service calls, which can be used by/inside tasks
   7:../include/R_RTOS_services.h ****  */
   8:../include/R_RTOS_services.h **** 
   9:../include/R_RTOS_services.h **** #ifndef HEADERS_R_RTOS_SERVICES_H_
  10:../include/R_RTOS_services.h **** #define HEADERS_R_RTOS_SERVICES_H_
  11:../include/R_RTOS_services.h **** 
  12:../include/R_RTOS_services.h **** #include "R_RTOS_inc.h"
  13:../include/R_RTOS_services.h **** 
  14:../include/R_RTOS_services.h **** #ifndef __STATIC_INLINE
  15:../include/R_RTOS_services.h **** #define __STATIC_INLINE  static inline
  16:../include/R_RTOS_services.h **** #endif
  17:../include/R_RTOS_services.h **** 
  18:../include/R_RTOS_services.h **** /** \def INPUT_ARG_1(input)
  19:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the first input argument for a following function call.
  20:../include/R_RTOS_services.h ****  *
  21:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  22:../include/R_RTOS_services.h ****  *
  23:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  24:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  25:../include/R_RTOS_services.h ****  *
  26:../include/R_RTOS_services.h ****  *  The first argument will be stored in R0.
  27:../include/R_RTOS_services.h ****  */
  28:../include/R_RTOS_services.h **** #define INPUT_ARG_1(input)  __asm volatile( "movs r0, %0 \n"::"l"(input) :)
  29:../include/R_RTOS_services.h **** 
  30:../include/R_RTOS_services.h **** /** \def INPUT_ARG_2(input)
  31:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the second input argument for a following function call.
  32:../include/R_RTOS_services.h ****  *
  33:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  34:../include/R_RTOS_services.h ****  *
  35:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  36:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  37:../include/R_RTOS_services.h ****  *
  38:../include/R_RTOS_services.h ****  *  The second argument will be stored in R1.
  39:../include/R_RTOS_services.h ****  */
  40:../include/R_RTOS_services.h **** #define INPUT_ARG_2(input)  __asm volatile( "movs r1, %0 \n"::"l"(input) :)
  41:../include/R_RTOS_services.h **** 
  42:../include/R_RTOS_services.h **** /** \def INPUT_ARG_3(input)
  43:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the third input argument for a following function call.
  44:../include/R_RTOS_services.h ****  *
  45:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  46:../include/R_RTOS_services.h ****  *
  47:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  48:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  49:../include/R_RTOS_services.h ****  *
  50:../include/R_RTOS_services.h ****  *  The third argument will be stored in R2.
  51:../include/R_RTOS_services.h ****  */
  52:../include/R_RTOS_services.h **** #define INPUT_ARG_3(input)  __asm volatile( "movs r2, %0 \n"::"l"(input) :)
  53:../include/R_RTOS_services.h **** 
  54:../include/R_RTOS_services.h **** /** \def INPUT_ARG_4(input)
  55:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the fourth input argument for a following function call.
  56:../include/R_RTOS_services.h ****  *
  57:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  58:../include/R_RTOS_services.h ****  *
  59:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  60:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  61:../include/R_RTOS_services.h ****  *
  62:../include/R_RTOS_services.h ****  *  The fourth argument will be stored in R3.
  63:../include/R_RTOS_services.h ****  */
  64:../include/R_RTOS_services.h **** #define INPUT_ARG_4(input)  __asm volatile( "movs r3, %0 \n"::"l"(input) :)
  65:../include/R_RTOS_services.h **** 
  66:../include/R_RTOS_services.h **** /** \def OUTPUT_ARG(output)
  67:../include/R_RTOS_services.h ****  *  \brief Retrieves an return value from a preceding function call and stores it into \a output.
  68:../include/R_RTOS_services.h ****  *
  69:../include/R_RTOS_services.h ****  *  \param  [out]   output  output argument - max uint32_t
  70:../include/R_RTOS_services.h ****  *
  71:../include/R_RTOS_services.h ****  *  When a function returns the return value is stored in r0.
  72:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function return, one can manually retrieve the return v
  73:../include/R_RTOS_services.h ****  *  Register r0 is the last valued pushed onto the stack, thus it is the first value to pop off the
  74:../include/R_RTOS_services.h ****  */
  75:../include/R_RTOS_services.h **** #define OUTPUT_ARG(output)  __asm volatile( "mrs     r1,     msp \n ldr r0, [r1] \n movs %0, r0 \n"
  76:../include/R_RTOS_services.h **** 
  77:../include/R_RTOS_services.h **** /** \def SVC( svcCode )
  78:../include/R_RTOS_services.h ****  *  \brief SVC Call with the given \a svcCode.
  79:../include/R_RTOS_services.h ****  *
  80:../include/R_RTOS_services.h ****  *  \param  [in]    svcCode  number of the SVC Call to be called
  81:../include/R_RTOS_services.h ****  *
  82:../include/R_RTOS_services.h ****  *  To make a SuperVisorCall the svc instruction has to be executed.
  83:../include/R_RTOS_services.h ****  *  A byte value can be passed alongside to further distinct the requested service.
  84:../include/R_RTOS_services.h ****  */
  85:../include/R_RTOS_services.h **** #define SVC( svcCode )      __asm volatile( "svc %[svc_code] \n" : : [svc_code]"I"(svcCode) : )
  86:../include/R_RTOS_services.h **** 
  87:../include/R_RTOS_services.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void svc_os_StartOS( void )
  88:../include/R_RTOS_services.h **** {
  89:../include/R_RTOS_services.h ****     SVC( SVC_OS_START );
  90:../include/R_RTOS_services.h ****     while ( 1 )
  91:../include/R_RTOS_services.h ****     {
  92:../include/R_RTOS_services.h ****         ;
  93:../include/R_RTOS_services.h ****     }
  94:../include/R_RTOS_services.h **** }
  95:../include/R_RTOS_services.h **** 
  96:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_InitTsk(
  97:../include/R_RTOS_services.h ****                                                                          const TskID tskID,
  98:../include/R_RTOS_services.h ****                                                                          const TskStartAddr const t
  99:../include/R_RTOS_services.h ****                                                                          const TskStartAddr const t
 100:../include/R_RTOS_services.h ****                                                                          const StackSize stckSze )
 101:../include/R_RTOS_services.h **** {
 102:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 103:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskAddr );
 104:../include/R_RTOS_services.h ****     INPUT_ARG_3( tskEndAddr );
 105:../include/R_RTOS_services.h ****     INPUT_ARG_4( stckSze );
 106:../include/R_RTOS_services.h ****     SVC( SVC_TSK_INIT );
 107:../include/R_RTOS_services.h ****     RetCode returnVal;
 108:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 109:../include/R_RTOS_services.h ****     return returnVal;
 110:../include/R_RTOS_services.h **** }
 111:../include/R_RTOS_services.h **** 
 112:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_SetTskPrio(
 113:../include/R_RTOS_services.h ****                                                                             const TskID tskID,
 114:../include/R_RTOS_services.h ****                                                                             const TskPrio tskPrio )
 115:../include/R_RTOS_services.h **** {
 116:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 117:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskPrio );
 118:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SETPRIO );
 119:../include/R_RTOS_services.h ****     RetCode returnVal;
 120:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 121:../include/R_RTOS_services.h ****     return returnVal;
 122:../include/R_RTOS_services.h **** }
 123:../include/R_RTOS_services.h **** 
 124:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_ActvTsk(
 125:../include/R_RTOS_services.h ****                                                                          const TskID tskID )
 126:../include/R_RTOS_services.h **** {
 127:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 128:../include/R_RTOS_services.h ****     SVC( SVC_TSK_ACTV );
 129:../include/R_RTOS_services.h ****     RetCode returnVal;
 130:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 131:../include/R_RTOS_services.h ****     return returnVal;
 132:../include/R_RTOS_services.h **** }
 133:../include/R_RTOS_services.h **** 
 134:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_KillTsk(
 135:../include/R_RTOS_services.h ****                                                                          TskTCB* const tsk )
 136:../include/R_RTOS_services.h **** {
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 139:../include/R_RTOS_services.h ****     RetCode returnVal;
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 141:../include/R_RTOS_services.h ****     return returnVal;
 142:../include/R_RTOS_services.h **** }
 143:../include/R_RTOS_services.h **** 
 144:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_setTskCriticalState(
 145:../include/R_RTOS_services.h ****                                                                                      void )
 146:../include/R_RTOS_services.h **** {
 147:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SET_CRIT );
 148:../include/R_RTOS_services.h ****     RetCode returnVal;
 149:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 150:../include/R_RTOS_services.h ****     return returnVal;
 151:../include/R_RTOS_services.h **** }
 152:../include/R_RTOS_services.h **** 
 153:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_resetTskCriticalState(
 154:../include/R_RTOS_services.h ****                                                                                        void )
 155:../include/R_RTOS_services.h **** {
 156:../include/R_RTOS_services.h ****     SVC( SVC_TSK_RESET_CRIT );
 157:../include/R_RTOS_services.h ****     RetCode returnVal;
 158:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 159:../include/R_RTOS_services.h ****     return returnVal;
 160:../include/R_RTOS_services.h **** }
 161:../include/R_RTOS_services.h **** 
 162:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mtx_TakeMtx(
 163:../include/R_RTOS_services.h ****                                                                          const MtxNr mtxNr,
 164:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk,
 165:../include/R_RTOS_services.h ****                                                                          const SysTicks maxTimeToWa
 166:../include/R_RTOS_services.h **** {
 167:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
 168:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 169:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
 170:../include/R_RTOS_services.h ****     SVC( SVC_MTX_TAKE );
 171:../include/R_RTOS_services.h ****     RetCode returnVal;
 172:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 173:../include/R_RTOS_services.h ****     return returnVal;
 174:../include/R_RTOS_services.h **** }
 175:../include/R_RTOS_services.h **** 
 176:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mtx_GiveMtx(
 177:../include/R_RTOS_services.h ****                                                                          const MtxNr mtxNr,
 178:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk )
 179:../include/R_RTOS_services.h **** {
 180:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
 181:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 182:../include/R_RTOS_services.h ****     SVC( SVC_MTX_GIVE );
 183:../include/R_RTOS_services.h ****     RetCode returnVal;
 184:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 185:../include/R_RTOS_services.h ****     return returnVal;
 186:../include/R_RTOS_services.h **** }
 187:../include/R_RTOS_services.h **** 
 188:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_sem_wait(
 189:../include/R_RTOS_services.h ****                                                                          const SemNr semNr,
 190:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk,
 191:../include/R_RTOS_services.h ****                                                                          const SysTicks maxTimeToWa
 192:../include/R_RTOS_services.h **** {
 193:../include/R_RTOS_services.h ****     INPUT_ARG_1( semNr );
 194:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 195:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
 196:../include/R_RTOS_services.h ****     SVC( SVC_SEM_WAIT );
 197:../include/R_RTOS_services.h ****     RetCode returnVal;
 198:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 199:../include/R_RTOS_services.h ****     return returnVal;
 200:../include/R_RTOS_services.h **** }
 201:../include/R_RTOS_services.h **** 
 202:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_sem_signal(
 203:../include/R_RTOS_services.h ****                                                                          const SemNr semNr,
 204:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk )
 205:../include/R_RTOS_services.h **** {
 206:../include/R_RTOS_services.h ****     INPUT_ARG_1( semNr );
 207:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 208:../include/R_RTOS_services.h ****     SVC( SVC_SEM_SIGNAL );
 209:../include/R_RTOS_services.h ****     RetCode returnVal;
 210:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 211:../include/R_RTOS_services.h ****     return returnVal;
 212:../include/R_RTOS_services.h **** }
 213:../include/R_RTOS_services.h **** 
 214:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mntr_init_mntr(
 215:../include/R_RTOS_services.h ****                                                                          const MntrNr mntrNr,
 216:../include/R_RTOS_services.h ****                                                                          const Data data )
 217:../include/R_RTOS_services.h **** {
 218:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 219:../include/R_RTOS_services.h ****     INPUT_ARG_2( data );
 220:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_INIT_MNTR );
 221:../include/R_RTOS_services.h ****     RetCode returnVal;
 222:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 223:../include/R_RTOS_services.h ****     return returnVal;
 224:../include/R_RTOS_services.h **** }
 225:../include/R_RTOS_services.h **** 
 226:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mntr_ReqReadAccs(
 227:../include/R_RTOS_services.h ****                                                                          const MntrNr mntrNr,
 228:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk )
 229:../include/R_RTOS_services.h **** {
 230:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
  59              		.loc 2 230 0
  60 0026 0023     		mov	r3, #0
  61              	@ 230 "../include/R_RTOS_services.h" 1
  62 0028 181C     		movs r0, r3 
  63              	
  64              	@ 0 "" 2
 231:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
  65              		.loc 2 231 0
  66              		.code	16
  67 002a FB68     		ldr	r3, [r7, #12]
  68              	@ 231 "../include/R_RTOS_services.h" 1
  69 002c 191C     		movs r1, r3 
  70              	
  71              	@ 0 "" 2
 232:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REQ_READ_ACC );
  72              		.loc 2 232 0
  73              	@ 232 "../include/R_RTOS_services.h" 1
  74 002e 0CDF     		svc #12 
  75              	
  76              	@ 0 "" 2
 233:../include/R_RTOS_services.h ****     RetCode returnVal;
 234:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
  77              		.loc 2 234 0
  78              	@ 234 "../include/R_RTOS_services.h" 1
  79 0030 EFF30881 		mrs     r1,     msp 
  80 0034 0868     	 ldr r0, [r1] 
  81 0036 021C     	 movs r2, r0 
  82              	
  83              	@ 0 "" 2
  84              		.code	16
  85 0038 3B1C     		mov	r3, r7
  86 003a 0B33     		add	r3, r3, #11
  87 003c 1A70     		strb	r2, [r3]
  88              	.LBE39:
  89              	.LBE38:
  23:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_HIGH(PIN_LED0);
  90              		.loc 1 23 0
  91 003e 484B     		ldr	r3, .L20
  92 0040 5A69     		ldr	r2, [r3, #20]
  93 0042 8023     		mov	r3, #128
  94 0044 5B00     		lsl	r3, r3, #1
  95 0046 1340     		and	r3, r2
  96 0048 06D0     		beq	.L6
  97              		.loc 1 23 0 is_stmt 0 discriminator 1
  98 004a 454B     		ldr	r3, .L20
  99 004c 444A     		ldr	r2, .L20
 100 004e 5268     		ldr	r2, [r2, #4]
 101 0050 8021     		mov	r1, #128
 102 0052 4900     		lsl	r1, r1, #1
 103 0054 0A43     		orr	r2, r1
 104 0056 5A60     		str	r2, [r3, #4]
 105              	.L6:
  24:../Tasks/MntrTest/RWR/Tasks.c **** 
  25:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_LOW( PIN_LED1 );
 106              		.loc 1 25 0 is_stmt 1
 107 0058 414B     		ldr	r3, .L20
 108 005a 5A69     		ldr	r2, [r3, #20]
 109 005c 8023     		mov	r3, #128
 110 005e 9B00     		lsl	r3, r3, #2
 111 0060 1340     		and	r3, r2
 112 0062 06D0     		beq	.L8
 113              		.loc 1 25 0 is_stmt 0 discriminator 1
 114 0064 3E4B     		ldr	r3, .L20
 115 0066 3E4A     		ldr	r2, .L20
 116 0068 9268     		ldr	r2, [r2, #8]
 117 006a 8021     		mov	r1, #128
 118 006c 8900     		lsl	r1, r1, #2
 119 006e 0A43     		orr	r2, r1
 120 0070 9A60     		str	r2, [r3, #8]
 121              	.L8:
 122              	.LBB40:
 123              	.LBB41:
 102:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 124              		.loc 2 102 0 is_stmt 1
 125 0072 0223     		mov	r3, #2
 126              	@ 102 "../include/R_RTOS_services.h" 1
 127 0074 181C     		movs r0, r3 
 128              	
 129              	@ 0 "" 2
 103:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskAddr );
 130              		.loc 2 103 0
 131              		.code	16
 132 0076 3C4B     		ldr	r3, .L20+8
 133              	@ 103 "../include/R_RTOS_services.h" 1
 134 0078 191C     		movs r1, r3 
 135              	
 136              	@ 0 "" 2
 104:../include/R_RTOS_services.h ****     INPUT_ARG_3( tskEndAddr );
 137              		.loc 2 104 0
 138              		.code	16
 139 007a 3C4B     		ldr	r3, .L20+12
 140              	@ 104 "../include/R_RTOS_services.h" 1
 141 007c 1A1C     		movs r2, r3 
 142              	
 143              	@ 0 "" 2
 105:../include/R_RTOS_services.h ****     INPUT_ARG_4( stckSze );
 144              		.loc 2 105 0
 145              		.code	16
 146 007e 8023     		mov	r3, #128
 147              	@ 105 "../include/R_RTOS_services.h" 1
 148 0080 1B1C     		movs r3, r3 
 149              	
 150              	@ 0 "" 2
 106:../include/R_RTOS_services.h ****     SVC( SVC_TSK_INIT );
 151              		.loc 2 106 0
 152              	@ 106 "../include/R_RTOS_services.h" 1
 153 0082 01DF     		svc #1 
 154              	
 155              	@ 0 "" 2
 108:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 156              		.loc 2 108 0
 157              	@ 108 "../include/R_RTOS_services.h" 1
 158 0084 EFF30881 		mrs     r1,     msp 
 159 0088 0868     	 ldr r0, [r1] 
 160 008a 021C     	 movs r2, r0 
 161              	
 162              	@ 0 "" 2
 163              		.code	16
 164 008c 3B1C     		mov	r3, r7
 165 008e 0A33     		add	r3, r3, #10
 166 0090 1A70     		strb	r2, [r3]
 167              	.LBE41:
 168              	.LBE40:
 169              	.LBB42:
 170              	.LBB43:
 116:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 171              		.loc 2 116 0
 172 0092 0223     		mov	r3, #2
 173              	@ 116 "../include/R_RTOS_services.h" 1
 174 0094 181C     		movs r0, r3 
 175              	
 176              	@ 0 "" 2
 117:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskPrio );
 177              		.loc 2 117 0
 178              		.code	16
 179 0096 0623     		mov	r3, #6
 180              	@ 117 "../include/R_RTOS_services.h" 1
 181 0098 191C     		movs r1, r3 
 182              	
 183              	@ 0 "" 2
 118:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SETPRIO );
 184              		.loc 2 118 0
 185              	@ 118 "../include/R_RTOS_services.h" 1
 186 009a 02DF     		svc #2 
 187              	
 188              	@ 0 "" 2
 120:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 189              		.loc 2 120 0
 190              	@ 120 "../include/R_RTOS_services.h" 1
 191 009c EFF30881 		mrs     r1,     msp 
 192 00a0 0868     	 ldr r0, [r1] 
 193 00a2 021C     	 movs r2, r0 
 194              	
 195              	@ 0 "" 2
 196              		.code	16
 197 00a4 3B1C     		mov	r3, r7
 198 00a6 0933     		add	r3, r3, #9
 199 00a8 1A70     		strb	r2, [r3]
 200              	.LBE43:
 201              	.LBE42:
 202              	.LBB44:
 203              	.LBB45:
 127:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 204              		.loc 2 127 0
 205 00aa 0223     		mov	r3, #2
 206              	@ 127 "../include/R_RTOS_services.h" 1
 207 00ac 181C     		movs r0, r3 
 208              	
 209              	@ 0 "" 2
 128:../include/R_RTOS_services.h ****     SVC( SVC_TSK_ACTV );
 210              		.loc 2 128 0
 211              	@ 128 "../include/R_RTOS_services.h" 1
 212 00ae 03DF     		svc #3 
 213              	
 214              	@ 0 "" 2
 130:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 215              		.loc 2 130 0
 216              	@ 130 "../include/R_RTOS_services.h" 1
 217 00b0 EFF30881 		mrs     r1,     msp 
 218 00b4 0868     	 ldr r0, [r1] 
 219 00b6 021C     	 movs r2, r0 
 220              	
 221              	@ 0 "" 2
 222              		.code	16
 223 00b8 3B1C     		mov	r3, r7
 224 00ba 0833     		add	r3, r3, #8
 225 00bc 1A70     		strb	r2, [r3]
 226              	.LBE45:
 227              	.LBE44:
 228              	.LBB46:
 229              	.LBB47:
 102:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 230              		.loc 2 102 0
 231 00be 0323     		mov	r3, #3
 232              	@ 102 "../include/R_RTOS_services.h" 1
 233 00c0 181C     		movs r0, r3 
 234              	
 235              	@ 0 "" 2
 103:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskAddr );
 236              		.loc 2 103 0
 237              		.code	16
 238 00c2 2B4B     		ldr	r3, .L20+16
 239              	@ 103 "../include/R_RTOS_services.h" 1
 240 00c4 191C     		movs r1, r3 
 241              	
 242              	@ 0 "" 2
 104:../include/R_RTOS_services.h ****     INPUT_ARG_3( tskEndAddr );
 243              		.loc 2 104 0
 244              		.code	16
 245 00c6 294B     		ldr	r3, .L20+12
 246              	@ 104 "../include/R_RTOS_services.h" 1
 247 00c8 1A1C     		movs r2, r3 
 248              	
 249              	@ 0 "" 2
 105:../include/R_RTOS_services.h ****     INPUT_ARG_4( stckSze );
 250              		.loc 2 105 0
 251              		.code	16
 252 00ca 8023     		mov	r3, #128
 253              	@ 105 "../include/R_RTOS_services.h" 1
 254 00cc 1B1C     		movs r3, r3 
 255              	
 256              	@ 0 "" 2
 106:../include/R_RTOS_services.h ****     SVC( SVC_TSK_INIT );
 257              		.loc 2 106 0
 258              	@ 106 "../include/R_RTOS_services.h" 1
 259 00ce 01DF     		svc #1 
 260              	
 261              	@ 0 "" 2
 108:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 262              		.loc 2 108 0
 263              	@ 108 "../include/R_RTOS_services.h" 1
 264 00d0 EFF30881 		mrs     r1,     msp 
 265 00d4 0868     	 ldr r0, [r1] 
 266 00d6 021C     	 movs r2, r0 
 267              	
 268              	@ 0 "" 2
 269              		.code	16
 270 00d8 FB1D     		add	r3, r7, #7
 271 00da 1A70     		strb	r2, [r3]
 272              	.LBE47:
 273              	.LBE46:
 274              	.LBB48:
 275              	.LBB49:
 116:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 276              		.loc 2 116 0
 277 00dc 0323     		mov	r3, #3
 278              	@ 116 "../include/R_RTOS_services.h" 1
 279 00de 181C     		movs r0, r3 
 280              	
 281              	@ 0 "" 2
 117:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskPrio );
 282              		.loc 2 117 0
 283              		.code	16
 284 00e0 0623     		mov	r3, #6
 285              	@ 117 "../include/R_RTOS_services.h" 1
 286 00e2 191C     		movs r1, r3 
 287              	
 288              	@ 0 "" 2
 118:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SETPRIO );
 289              		.loc 2 118 0
 290              	@ 118 "../include/R_RTOS_services.h" 1
 291 00e4 02DF     		svc #2 
 292              	
 293              	@ 0 "" 2
 120:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 294              		.loc 2 120 0
 295              	@ 120 "../include/R_RTOS_services.h" 1
 296 00e6 EFF30881 		mrs     r1,     msp 
 297 00ea 0868     	 ldr r0, [r1] 
 298 00ec 021C     	 movs r2, r0 
 299              	
 300              	@ 0 "" 2
 301              		.code	16
 302 00ee BB1D     		add	r3, r7, #6
 303 00f0 1A70     		strb	r2, [r3]
 304              	.LBE49:
 305              	.LBE48:
 306              	.LBB50:
 307              	.LBB51:
 127:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 308              		.loc 2 127 0
 309 00f2 0323     		mov	r3, #3
 310              	@ 127 "../include/R_RTOS_services.h" 1
 311 00f4 181C     		movs r0, r3 
 312              	
 313              	@ 0 "" 2
 128:../include/R_RTOS_services.h ****     SVC( SVC_TSK_ACTV );
 314              		.loc 2 128 0
 315              	@ 128 "../include/R_RTOS_services.h" 1
 316 00f6 03DF     		svc #3 
 317              	
 318              	@ 0 "" 2
 130:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 319              		.loc 2 130 0
 320              	@ 130 "../include/R_RTOS_services.h" 1
 321 00f8 EFF30881 		mrs     r1,     msp 
 322 00fc 0868     	 ldr r0, [r1] 
 323 00fe 021C     	 movs r2, r0 
 324              	
 325              	@ 0 "" 2
 326              		.code	16
 327 0100 7B1D     		add	r3, r7, #5
 328 0102 1A70     		strb	r2, [r3]
 329              	.LBE51:
 330              	.LBE50:
 331              	.LBB52:
 332              	.LBB53:
 235:../include/R_RTOS_services.h ****     return returnVal;
 236:../include/R_RTOS_services.h **** }
 237:../include/R_RTOS_services.h **** 
 238:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mntr_ReqWriteAccs(
 239:../include/R_RTOS_services.h ****                                                                          const MntrNr mntrNr,
 240:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk )
 241:../include/R_RTOS_services.h **** {
 242:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 243:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 244:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REQ_WRITE_ACC );
 245:../include/R_RTOS_services.h ****     RetCode returnVal;
 246:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 247:../include/R_RTOS_services.h ****     return returnVal;
 248:../include/R_RTOS_services.h **** }
 249:../include/R_RTOS_services.h **** 
 250:../include/R_RTOS_services.h **** 
 251:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mntr_RelAccs(
 252:../include/R_RTOS_services.h ****                                                                          const MntrNr mntrNr )
 253:../include/R_RTOS_services.h **** {
 254:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 255:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REL_ACC );
 256:../include/R_RTOS_services.h ****     RetCode returnVal;
 257:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 258:../include/R_RTOS_services.h ****     return returnVal;
 259:../include/R_RTOS_services.h **** }
 260:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_evt_SendEvt(
 261:../include/R_RTOS_services.h ****                                                                          const EvtNr evt )
 262:../include/R_RTOS_services.h **** {
 263:../include/R_RTOS_services.h ****     INPUT_ARG_1( evt );
 264:../include/R_RTOS_services.h ****     SVC( SVC_EVT_SEND );
 265:../include/R_RTOS_services.h ****     RetCode returnVal;
 266:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 267:../include/R_RTOS_services.h ****     return returnVal;
 268:../include/R_RTOS_services.h **** }
 269:../include/R_RTOS_services.h **** 
 270:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_evt_RecvEvt(
 271:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk,
 272:../include/R_RTOS_services.h ****                                                                          EVTQSlots evtMask,
 273:../include/R_RTOS_services.h ****                                                                          const SysTicks maxTimeToWa
 274:../include/R_RTOS_services.h **** {
 275:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 276:../include/R_RTOS_services.h ****     INPUT_ARG_2( evtMask );
 277:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
 278:../include/R_RTOS_services.h ****     SVC( SVC_EVT_RECV );
 279:../include/R_RTOS_services.h ****     RetCode returnVal;
 280:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 281:../include/R_RTOS_services.h ****     return returnVal;
 282:../include/R_RTOS_services.h **** }
 283:../include/R_RTOS_services.h **** 
 284:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tmr_SetTimer(
 285:../include/R_RTOS_services.h ****                                                                           const WaitTime msToWait,
 286:../include/R_RTOS_services.h ****                                                                           TskTCB* const tsk )
 287:../include/R_RTOS_services.h **** {
 288:../include/R_RTOS_services.h ****     INPUT_ARG_1( msToWait );
 333              		.loc 2 288 0
 334 0104 C823     		mov	r3, #200
 335              	@ 288 "../include/R_RTOS_services.h" 1
 336 0106 181C     		movs r0, r3 
 337              	
 338              	@ 0 "" 2
 289:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 339              		.loc 2 289 0
 340              		.code	16
 341 0108 1A4B     		ldr	r3, .L20+20
 342              	@ 289 "../include/R_RTOS_services.h" 1
 343 010a 191C     		movs r1, r3 
 344              	
 345              	@ 0 "" 2
 290:../include/R_RTOS_services.h ****     SVC( SVC_TMR_SET );
 346              		.loc 2 290 0
 347              	@ 290 "../include/R_RTOS_services.h" 1
 348 010c 11DF     		svc #17 
 349              	
 350              	@ 0 "" 2
 291:../include/R_RTOS_services.h ****     RetCode returnVal;
 292:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 351              		.loc 2 292 0
 352              	@ 292 "../include/R_RTOS_services.h" 1
 353 010e EFF30881 		mrs     r1,     msp 
 354 0112 0868     	 ldr r0, [r1] 
 355 0114 021C     	 movs r2, r0 
 356              	
 357              	@ 0 "" 2
 358              		.code	16
 359 0116 3B1D     		add	r3, r7, #4
 360 0118 1A70     		strb	r2, [r3]
 361              	.LBE53:
 362              	.LBE52:
  26:../Tasks/MntrTest/RWR/Tasks.c **** 
  27:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_InitTsk( (TskID) 0x2u, &tsk2, &tsk_EndTheTask, MY_STACK_SIZE );
  28:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_SetTskPrio( (TskID) 0x2u, TSK_PRIO_HIG );
  29:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_ActvTsk( (TskID) 0x2u );
  30:../Tasks/MntrTest/RWR/Tasks.c **** 
  31:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_InitTsk( (TskID) 0x3u, &tsk3, &tsk_EndTheTask, MY_STACK_SIZE );
  32:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_SetTskPrio( (TskID) 0x3u, TSK_PRIO_HIG );
  33:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_ActvTsk( (TskID) 0x3u );
  34:../Tasks/MntrTest/RWR/Tasks.c **** 
  35:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tmr_SetTimer( (WaitTime) 200, &tsk_AR[1] );
  36:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_HIGH( PIN_LED1 );
 363              		.loc 1 36 0
 364 011a 114B     		ldr	r3, .L20
 365 011c 5A69     		ldr	r2, [r3, #20]
 366 011e 8023     		mov	r3, #128
 367 0120 9B00     		lsl	r3, r3, #2
 368 0122 1340     		and	r3, r2
 369 0124 06D0     		beq	.L17
 370              		.loc 1 36 0 is_stmt 0 discriminator 1
 371 0126 0E4B     		ldr	r3, .L20
 372 0128 0D4A     		ldr	r2, .L20
 373 012a 5268     		ldr	r2, [r2, #4]
 374 012c 8021     		mov	r1, #128
 375 012e 8900     		lsl	r1, r1, #2
 376 0130 0A43     		orr	r2, r1
 377 0132 5A60     		str	r2, [r3, #4]
 378              	.L17:
 379              	.LBB54:
 380              	.LBB55:
 254:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 381              		.loc 2 254 0 is_stmt 1
 382 0134 0023     		mov	r3, #0
 383              	@ 254 "../include/R_RTOS_services.h" 1
 384 0136 181C     		movs r0, r3 
 385              	
 386              	@ 0 "" 2
 255:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REL_ACC );
 387              		.loc 2 255 0
 388              	@ 255 "../include/R_RTOS_services.h" 1
 389 0138 0EDF     		svc #14 
 390              	
 391              	@ 0 "" 2
 257:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 392              		.loc 2 257 0
 393              	@ 257 "../include/R_RTOS_services.h" 1
 394 013a EFF30881 		mrs     r1,     msp 
 395 013e 0868     	 ldr r0, [r1] 
 396 0140 021C     	 movs r2, r0 
 397              	
 398              	@ 0 "" 2
 399              		.code	16
 400 0142 FB1C     		add	r3, r7, #3
 401 0144 1A70     		strb	r2, [r3]
 402              	.LBE55:
 403              	.LBE54:
 404              	.LBB56:
 405              	.LBB57:
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 406              		.loc 2 137 0
 407 0146 0B4B     		ldr	r3, .L20+20
 408              	@ 137 "../include/R_RTOS_services.h" 1
 409 0148 181C     		movs r0, r3 
 410              	
 411              	@ 0 "" 2
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 412              		.loc 2 138 0
 413              	@ 138 "../include/R_RTOS_services.h" 1
 414 014a 04DF     		svc #4 
 415              	
 416              	@ 0 "" 2
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 417              		.loc 2 140 0
 418              	@ 140 "../include/R_RTOS_services.h" 1
 419 014c EFF30881 		mrs     r1,     msp 
 420 0150 0868     	 ldr r0, [r1] 
 421 0152 021C     	 movs r2, r0 
 422              	
 423              	@ 0 "" 2
 424              		.code	16
 425 0154 BB1C     		add	r3, r7, #2
 426 0156 1A70     		strb	r2, [r3]
 427              	.LBE57:
 428              	.LBE56:
  37:../Tasks/MntrTest/RWR/Tasks.c ****     svc_mntr_RelAccs((const MntrNr)0x0u);
  38:../Tasks/MntrTest/RWR/Tasks.c **** 
  39:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_KillTsk( &tsk_AR[1] );
  40:../Tasks/MntrTest/RWR/Tasks.c **** }
 429              		.loc 1 40 0
 430 0158 BD46     		mov	sp, r7
 431 015a 04B0     		add	sp, sp, #16
 432              		@ sp needed
 433 015c 80BD     		pop	{r7, pc}
 434              	.L21:
 435 015e C046     		.align	2
 436              	.L20:
 437 0160 00F00F40 		.word	1074786304
 438 0164 00000000 		.word	p_cur_tsk_tcb
 439 0168 00000000 		.word	tsk2
 440 016c 00000000 		.word	tsk_EndTheTask
 441 0170 00000000 		.word	tsk3
 442 0174 24000000 		.word	tsk_AR+36
 443              		.cfi_endproc
 444              	.LFE68:
 446              		.section	.text.tsk2,"ax",%progbits
 447              		.align	2
 448              		.global	tsk2
 449              		.code	16
 450              		.thumb_func
 452              	tsk2:
 453              	.LFB69:
  41:../Tasks/MntrTest/RWR/Tasks.c **** void tsk2( void )
  42:../Tasks/MntrTest/RWR/Tasks.c **** {
 454              		.loc 1 42 0
 455              		.cfi_startproc
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
  43:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_LOW( PIN_LED0 );
 464              		.loc 1 43 0
 465 0006 314B     		ldr	r3, .L35
 466 0008 5A69     		ldr	r2, [r3, #20]
 467 000a 8023     		mov	r3, #128
 468 000c 5B00     		lsl	r3, r3, #1
 469 000e 1340     		and	r3, r2
 470 0010 06D0     		beq	.L24
 471              		.loc 1 43 0 is_stmt 0 discriminator 1
 472 0012 2E4B     		ldr	r3, .L35
 473 0014 2D4A     		ldr	r2, .L35
 474 0016 9268     		ldr	r2, [r2, #8]
 475 0018 8021     		mov	r1, #128
 476 001a 4900     		lsl	r1, r1, #1
 477 001c 0A43     		orr	r2, r1
 478 001e 9A60     		str	r2, [r3, #8]
 479              	.L24:
  44:../Tasks/MntrTest/RWR/Tasks.c ****     svc_mntr_ReqWriteAccs((const MntrNr)0x0u, p_cur_tsk_tcb);
 480              		.loc 1 44 0 is_stmt 1
 481 0020 2B4B     		ldr	r3, .L35+4
 482 0022 1B68     		ldr	r3, [r3]
 483 0024 7B60     		str	r3, [r7, #4]
 484              	.LBB58:
 485              	.LBB59:
 242:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 486              		.loc 2 242 0
 487 0026 0023     		mov	r3, #0
 488              	@ 242 "../include/R_RTOS_services.h" 1
 489 0028 181C     		movs r0, r3 
 490              	
 491              	@ 0 "" 2
 243:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 492              		.loc 2 243 0
 493              		.code	16
 494 002a 7B68     		ldr	r3, [r7, #4]
 495              	@ 243 "../include/R_RTOS_services.h" 1
 496 002c 191C     		movs r1, r3 
 497              	
 498              	@ 0 "" 2
 244:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REQ_WRITE_ACC );
 499              		.loc 2 244 0
 500              	@ 244 "../include/R_RTOS_services.h" 1
 501 002e 0DDF     		svc #13 
 502              	
 503              	@ 0 "" 2
 246:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 504              		.loc 2 246 0
 505              	@ 246 "../include/R_RTOS_services.h" 1
 506 0030 EFF30881 		mrs     r1,     msp 
 507 0034 0868     	 ldr r0, [r1] 
 508 0036 021C     	 movs r2, r0 
 509              	
 510              	@ 0 "" 2
 511              		.code	16
 512 0038 FB1C     		add	r3, r7, #3
 513 003a 1A70     		strb	r2, [r3]
 514              	.LBE59:
 515              	.LBE58:
  45:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_HIGH( PIN_LED0 );
 516              		.loc 1 45 0
 517 003c 234B     		ldr	r3, .L35
 518 003e 5A69     		ldr	r2, [r3, #20]
 519 0040 8023     		mov	r3, #128
 520 0042 5B00     		lsl	r3, r3, #1
 521 0044 1340     		and	r3, r2
 522 0046 06D0     		beq	.L27
 523              		.loc 1 45 0 is_stmt 0 discriminator 1
 524 0048 204B     		ldr	r3, .L35
 525 004a 204A     		ldr	r2, .L35
 526 004c 5268     		ldr	r2, [r2, #4]
 527 004e 8021     		mov	r1, #128
 528 0050 4900     		lsl	r1, r1, #1
 529 0052 0A43     		orr	r2, r1
 530 0054 5A60     		str	r2, [r3, #4]
 531              	.L27:
  46:../Tasks/MntrTest/RWR/Tasks.c **** 
  47:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_LOW( PIN_LED2 );
 532              		.loc 1 47 0 is_stmt 1
 533 0056 1D4B     		ldr	r3, .L35
 534 0058 5A69     		ldr	r2, [r3, #20]
 535 005a 8023     		mov	r3, #128
 536 005c DB00     		lsl	r3, r3, #3
 537 005e 1340     		and	r3, r2
 538 0060 06D0     		beq	.L29
 539              		.loc 1 47 0 is_stmt 0 discriminator 1
 540 0062 1A4B     		ldr	r3, .L35
 541 0064 194A     		ldr	r2, .L35
 542 0066 9268     		ldr	r2, [r2, #8]
 543 0068 8021     		mov	r1, #128
 544 006a C900     		lsl	r1, r1, #3
 545 006c 0A43     		orr	r2, r1
 546 006e 9A60     		str	r2, [r3, #8]
 547              	.L29:
 548              	.LBB60:
 549              	.LBB61:
 288:../include/R_RTOS_services.h ****     INPUT_ARG_1( msToWait );
 550              		.loc 2 288 0 is_stmt 1
 551 0070 9623     		mov	r3, #150
 552 0072 5B00     		lsl	r3, r3, #1
 553              	@ 288 "../include/R_RTOS_services.h" 1
 554 0074 181C     		movs r0, r3 
 555              	
 556              	@ 0 "" 2
 289:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 557              		.loc 2 289 0
 558              		.code	16
 559 0076 174B     		ldr	r3, .L35+8
 560              	@ 289 "../include/R_RTOS_services.h" 1
 561 0078 191C     		movs r1, r3 
 562              	
 563              	@ 0 "" 2
 290:../include/R_RTOS_services.h ****     SVC( SVC_TMR_SET );
 564              		.loc 2 290 0
 565              	@ 290 "../include/R_RTOS_services.h" 1
 566 007a 11DF     		svc #17 
 567              	
 568              	@ 0 "" 2
 569              		.loc 2 292 0
 570              	@ 292 "../include/R_RTOS_services.h" 1
 571 007c EFF30881 		mrs     r1,     msp 
 572 0080 0868     	 ldr r0, [r1] 
 573 0082 021C     	 movs r2, r0 
 574              	
 575              	@ 0 "" 2
 576              		.code	16
 577 0084 BB1C     		add	r3, r7, #2
 578 0086 1A70     		strb	r2, [r3]
 579              	.LBE61:
 580              	.LBE60:
  48:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tmr_SetTimer( (WaitTime) 300, &tsk_AR[2] );
  49:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_HIGH( PIN_LED2 );
 581              		.loc 1 49 0
 582 0088 104B     		ldr	r3, .L35
 583 008a 5A69     		ldr	r2, [r3, #20]
 584 008c 8023     		mov	r3, #128
 585 008e DB00     		lsl	r3, r3, #3
 586 0090 1340     		and	r3, r2
 587 0092 06D0     		beq	.L32
 588              		.loc 1 49 0 is_stmt 0 discriminator 1
 589 0094 0D4B     		ldr	r3, .L35
 590 0096 0D4A     		ldr	r2, .L35
 591 0098 5268     		ldr	r2, [r2, #4]
 592 009a 8021     		mov	r1, #128
 593 009c C900     		lsl	r1, r1, #3
 594 009e 0A43     		orr	r2, r1
 595 00a0 5A60     		str	r2, [r3, #4]
 596              	.L32:
 597              	.LBB62:
 598              	.LBB63:
 254:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 599              		.loc 2 254 0 is_stmt 1
 600 00a2 0023     		mov	r3, #0
 601              	@ 254 "../include/R_RTOS_services.h" 1
 602 00a4 181C     		movs r0, r3 
 603              	
 604              	@ 0 "" 2
 255:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REL_ACC );
 605              		.loc 2 255 0
 606              	@ 255 "../include/R_RTOS_services.h" 1
 607 00a6 0EDF     		svc #14 
 608              	
 609              	@ 0 "" 2
 257:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 610              		.loc 2 257 0
 611              	@ 257 "../include/R_RTOS_services.h" 1
 612 00a8 EFF30881 		mrs     r1,     msp 
 613 00ac 0868     	 ldr r0, [r1] 
 614 00ae 021C     	 movs r2, r0 
 615              	
 616              	@ 0 "" 2
 617              		.code	16
 618 00b0 7B1C     		add	r3, r7, #1
 619 00b2 1A70     		strb	r2, [r3]
 620              	.LBE63:
 621              	.LBE62:
 622              	.LBB64:
 623              	.LBB65:
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 624              		.loc 2 137 0
 625 00b4 074B     		ldr	r3, .L35+8
 626              	@ 137 "../include/R_RTOS_services.h" 1
 627 00b6 181C     		movs r0, r3 
 628              	
 629              	@ 0 "" 2
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 630              		.loc 2 138 0
 631              	@ 138 "../include/R_RTOS_services.h" 1
 632 00b8 04DF     		svc #4 
 633              	
 634              	@ 0 "" 2
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 635              		.loc 2 140 0
 636              	@ 140 "../include/R_RTOS_services.h" 1
 637 00ba EFF30881 		mrs     r1,     msp 
 638 00be 0868     	 ldr r0, [r1] 
 639 00c0 021C     	 movs r2, r0 
 640              	
 641              	@ 0 "" 2
 642              		.code	16
 643 00c2 3B1C     		mov	r3, r7
 644 00c4 1A70     		strb	r2, [r3]
 645              	.LBE65:
 646              	.LBE64:
  50:../Tasks/MntrTest/RWR/Tasks.c **** 
  51:../Tasks/MntrTest/RWR/Tasks.c ****     svc_mntr_RelAccs((const MntrNr)0x0u);
  52:../Tasks/MntrTest/RWR/Tasks.c **** 
  53:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_KillTsk( &tsk_AR[2] );
  54:../Tasks/MntrTest/RWR/Tasks.c **** }
 647              		.loc 1 54 0
 648 00c6 BD46     		mov	sp, r7
 649 00c8 02B0     		add	sp, sp, #8
 650              		@ sp needed
 651 00ca 80BD     		pop	{r7, pc}
 652              	.L36:
 653              		.align	2
 654              	.L35:
 655 00cc 00F00F40 		.word	1074786304
 656 00d0 00000000 		.word	p_cur_tsk_tcb
 657 00d4 48000000 		.word	tsk_AR+72
 658              		.cfi_endproc
 659              	.LFE69:
 661              		.section	.text.tsk3,"ax",%progbits
 662              		.align	2
 663              		.global	tsk3
 664              		.code	16
 665              		.thumb_func
 667              	tsk3:
 668              	.LFB70:
  55:../Tasks/MntrTest/RWR/Tasks.c **** 
  56:../Tasks/MntrTest/RWR/Tasks.c **** void tsk3( void )
  57:../Tasks/MntrTest/RWR/Tasks.c **** {
 669              		.loc 1 57 0
 670              		.cfi_startproc
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 86B0     		sub	sp, sp, #24
 676              		.cfi_def_cfa_offset 32
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
  58:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_LOW( PIN_LED0 );
 679              		.loc 1 58 0
 680 0006 354B     		ldr	r3, .L50
 681 0008 5A69     		ldr	r2, [r3, #20]
 682 000a 8023     		mov	r3, #128
 683 000c 5B00     		lsl	r3, r3, #1
 684 000e 1340     		and	r3, r2
 685 0010 06D0     		beq	.L39
 686              		.loc 1 58 0 is_stmt 0 discriminator 1
 687 0012 324B     		ldr	r3, .L50
 688 0014 314A     		ldr	r2, .L50
 689 0016 9268     		ldr	r2, [r2, #8]
 690 0018 8021     		mov	r1, #128
 691 001a 4900     		lsl	r1, r1, #1
 692 001c 0A43     		orr	r2, r1
 693 001e 9A60     		str	r2, [r3, #8]
 694              	.L39:
  59:../Tasks/MntrTest/RWR/Tasks.c ****     svc_mntr_ReqReadAccs((const MntrNr)0x0u, p_cur_tsk_tcb);
 695              		.loc 1 59 0 is_stmt 1
 696 0020 2F4B     		ldr	r3, .L50+4
 697 0022 1B68     		ldr	r3, [r3]
 698 0024 7B61     		str	r3, [r7, #20]
 699              	.LBB66:
 700              	.LBB67:
 230:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 701              		.loc 2 230 0
 702 0026 0023     		mov	r3, #0
 703              	@ 230 "../include/R_RTOS_services.h" 1
 704 0028 181C     		movs r0, r3 
 705              	
 706              	@ 0 "" 2
 231:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 707              		.loc 2 231 0
 708              		.code	16
 709 002a 7B69     		ldr	r3, [r7, #20]
 710              	@ 231 "../include/R_RTOS_services.h" 1
 711 002c 191C     		movs r1, r3 
 712              	
 713              	@ 0 "" 2
 232:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REQ_READ_ACC );
 714              		.loc 2 232 0
 715              	@ 232 "../include/R_RTOS_services.h" 1
 716 002e 0CDF     		svc #12 
 717              	
 718              	@ 0 "" 2
 234:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 719              		.loc 2 234 0
 720              	@ 234 "../include/R_RTOS_services.h" 1
 721 0030 EFF30881 		mrs     r1,     msp 
 722 0034 0868     	 ldr r0, [r1] 
 723 0036 021C     	 movs r2, r0 
 724              	
 725              	@ 0 "" 2
 726              		.code	16
 727 0038 3B1C     		mov	r3, r7
 728 003a 1333     		add	r3, r3, #19
 729 003c 1A70     		strb	r2, [r3]
 730              	.LBE67:
 731              	.LBE66:
  60:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_HIGH( PIN_LED0 );
 732              		.loc 1 60 0
 733 003e 274B     		ldr	r3, .L50
 734 0040 5A69     		ldr	r2, [r3, #20]
 735 0042 8023     		mov	r3, #128
 736 0044 5B00     		lsl	r3, r3, #1
 737 0046 1340     		and	r3, r2
 738 0048 06D0     		beq	.L42
 739              		.loc 1 60 0 is_stmt 0 discriminator 1
 740 004a 244B     		ldr	r3, .L50
 741 004c 234A     		ldr	r2, .L50
 742 004e 5268     		ldr	r2, [r2, #4]
 743 0050 8021     		mov	r1, #128
 744 0052 4900     		lsl	r1, r1, #1
 745 0054 0A43     		orr	r2, r1
 746 0056 5A60     		str	r2, [r3, #4]
 747              	.L42:
  61:../Tasks/MntrTest/RWR/Tasks.c **** 
  62:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_LOW(PIN_LED3);
 748              		.loc 1 62 0 is_stmt 1
 749 0058 204B     		ldr	r3, .L50
 750 005a 5A69     		ldr	r2, [r3, #20]
 751 005c 8023     		mov	r3, #128
 752 005e 1B01     		lsl	r3, r3, #4
 753 0060 1340     		and	r3, r2
 754 0062 06D0     		beq	.L44
 755              		.loc 1 62 0 is_stmt 0 discriminator 1
 756 0064 1D4B     		ldr	r3, .L50
 757 0066 1D4A     		ldr	r2, .L50
 758 0068 9268     		ldr	r2, [r2, #8]
 759 006a 8021     		mov	r1, #128
 760 006c 0901     		lsl	r1, r1, #4
 761 006e 0A43     		orr	r2, r1
 762 0070 9A60     		str	r2, [r3, #8]
 763              	.L44:
  63:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tmr_SetTimer( (WaitTime)200u, p_cur_tsk_tcb);
 764              		.loc 1 63 0 is_stmt 1
 765 0072 1B4B     		ldr	r3, .L50+4
 766 0074 1B68     		ldr	r3, [r3]
 767 0076 FB60     		str	r3, [r7, #12]
 768              	.LBB68:
 769              	.LBB69:
 288:../include/R_RTOS_services.h ****     INPUT_ARG_1( msToWait );
 770              		.loc 2 288 0
 771 0078 C823     		mov	r3, #200
 772              	@ 288 "../include/R_RTOS_services.h" 1
 773 007a 181C     		movs r0, r3 
 774              	
 775              	@ 0 "" 2
 289:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 776              		.loc 2 289 0
 777              		.code	16
 778 007c FB68     		ldr	r3, [r7, #12]
 779              	@ 289 "../include/R_RTOS_services.h" 1
 780 007e 191C     		movs r1, r3 
 781              	
 782              	@ 0 "" 2
 290:../include/R_RTOS_services.h ****     SVC( SVC_TMR_SET );
 783              		.loc 2 290 0
 784              	@ 290 "../include/R_RTOS_services.h" 1
 785 0080 11DF     		svc #17 
 786              	
 787              	@ 0 "" 2
 788              		.loc 2 292 0
 789              	@ 292 "../include/R_RTOS_services.h" 1
 790 0082 EFF30881 		mrs     r1,     msp 
 791 0086 0868     	 ldr r0, [r1] 
 792 0088 021C     	 movs r2, r0 
 793              	
 794              	@ 0 "" 2
 795              		.code	16
 796 008a 3B1C     		mov	r3, r7
 797 008c 0B33     		add	r3, r3, #11
 798 008e 1A70     		strb	r2, [r3]
 799              	.LBE69:
 800              	.LBE68:
  64:../Tasks/MntrTest/RWR/Tasks.c ****     SET_PIN_HIGH(PIN_LED3);
 801              		.loc 1 64 0
 802 0090 124B     		ldr	r3, .L50
 803 0092 5A69     		ldr	r2, [r3, #20]
 804 0094 8023     		mov	r3, #128
 805 0096 1B01     		lsl	r3, r3, #4
 806 0098 1340     		and	r3, r2
 807 009a 06D0     		beq	.L47
 808              		.loc 1 64 0 is_stmt 0 discriminator 1
 809 009c 0F4B     		ldr	r3, .L50
 810 009e 0F4A     		ldr	r2, .L50
 811 00a0 5268     		ldr	r2, [r2, #4]
 812 00a2 8021     		mov	r1, #128
 813 00a4 0901     		lsl	r1, r1, #4
 814 00a6 0A43     		orr	r2, r1
 815 00a8 5A60     		str	r2, [r3, #4]
 816              	.L47:
 817              	.LBB70:
 818              	.LBB71:
 254:../include/R_RTOS_services.h ****     INPUT_ARG_1( mntrNr );
 819              		.loc 2 254 0 is_stmt 1
 820 00aa 0023     		mov	r3, #0
 821              	@ 254 "../include/R_RTOS_services.h" 1
 822 00ac 181C     		movs r0, r3 
 823              	
 824              	@ 0 "" 2
 255:../include/R_RTOS_services.h ****     SVC( SVC_MNTR_REL_ACC );
 825              		.loc 2 255 0
 826              	@ 255 "../include/R_RTOS_services.h" 1
 827 00ae 0EDF     		svc #14 
 828              	
 829              	@ 0 "" 2
 257:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 830              		.loc 2 257 0
 831              	@ 257 "../include/R_RTOS_services.h" 1
 832 00b0 EFF30881 		mrs     r1,     msp 
 833 00b4 0868     	 ldr r0, [r1] 
 834 00b6 021C     	 movs r2, r0 
 835              	
 836              	@ 0 "" 2
 837              		.code	16
 838 00b8 3B1C     		mov	r3, r7
 839 00ba 0A33     		add	r3, r3, #10
 840 00bc 1A70     		strb	r2, [r3]
 841              	.LBE71:
 842              	.LBE70:
  65:../Tasks/MntrTest/RWR/Tasks.c **** 
  66:../Tasks/MntrTest/RWR/Tasks.c ****     svc_mntr_RelAccs((const MntrNr)0x0u);
  67:../Tasks/MntrTest/RWR/Tasks.c **** 
  68:../Tasks/MntrTest/RWR/Tasks.c ****     svc_tsk_KillTsk(p_cur_tsk_tcb);
 843              		.loc 1 68 0
 844 00be 084B     		ldr	r3, .L50+4
 845 00c0 1B68     		ldr	r3, [r3]
 846 00c2 7B60     		str	r3, [r7, #4]
 847              	.LBB72:
 848              	.LBB73:
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 849              		.loc 2 137 0
 850 00c4 7B68     		ldr	r3, [r7, #4]
 851              	@ 137 "../include/R_RTOS_services.h" 1
 852 00c6 181C     		movs r0, r3 
 853              	
 854              	@ 0 "" 2
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 855              		.loc 2 138 0
 856              	@ 138 "../include/R_RTOS_services.h" 1
 857 00c8 04DF     		svc #4 
 858              	
 859              	@ 0 "" 2
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 860              		.loc 2 140 0
 861              	@ 140 "../include/R_RTOS_services.h" 1
 862 00ca EFF30881 		mrs     r1,     msp 
 863 00ce 0868     	 ldr r0, [r1] 
 864 00d0 021C     	 movs r2, r0 
 865              	
 866              	@ 0 "" 2
 867              		.code	16
 868 00d2 FB1C     		add	r3, r7, #3
 869 00d4 1A70     		strb	r2, [r3]
 870              	.LBE73:
 871              	.LBE72:
  69:../Tasks/MntrTest/RWR/Tasks.c **** }
 872              		.loc 1 69 0
 873 00d6 BD46     		mov	sp, r7
 874 00d8 06B0     		add	sp, sp, #24
 875              		@ sp needed
 876 00da 80BD     		pop	{r7, pc}
 877              	.L51:
 878              		.align	2
 879              	.L50:
 880 00dc 00F00F40 		.word	1074786304
 881 00e0 00000000 		.word	p_cur_tsk_tcb
 882              		.cfi_endproc
 883              	.LFE70:
 885              		.section	.text.actvTsk1,"ax",%progbits
 886              		.align	2
 887              		.global	actvTsk1
 888              		.code	16
 889              		.thumb_func
 891              	actvTsk1:
 892              	.LFB71:
  70:../Tasks/MntrTest/RWR/Tasks.c **** 
  71:../Tasks/MntrTest/RWR/Tasks.c **** void actvTsk1( void )
  72:../Tasks/MntrTest/RWR/Tasks.c **** {
 893              		.loc 1 72 0
 894              		.cfi_startproc
 895 0000 80B5     		push	{r7, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
  73:../Tasks/MntrTest/RWR/Tasks.c ****     tsk_tskInit( (TskID) 0x1u, &tsk1, &tsk_EndTheTask, MY_STACK_SIZE );
 901              		.loc 1 73 0
 902 0004 0A4A     		ldr	r2, .L53
 903 0006 0B4B     		ldr	r3, .L53+4
 904 0008 0120     		mov	r0, #1
 905 000a 111C     		mov	r1, r2
 906 000c 1A1C     		mov	r2, r3
 907 000e 8023     		mov	r3, #128
 908 0010 FFF7FEFF 		bl	tsk_tskInit
  74:../Tasks/MntrTest/RWR/Tasks.c ****     tsk_ChngePrio(&tsk_AR[0x1u],TSK_PRIO_MED);
 909              		.loc 1 74 0
 910 0014 084B     		ldr	r3, .L53+8
 911 0016 181C     		mov	r0, r3
 912 0018 0421     		mov	r1, #4
 913 001a FFF7FEFF 		bl	tsk_ChngePrio
  75:../Tasks/MntrTest/RWR/Tasks.c ****     tsk_ActvTsk( &tsk_AR[(TskID) 0x1u] );
 914              		.loc 1 75 0
 915 001e 064B     		ldr	r3, .L53+8
 916 0020 181C     		mov	r0, r3
 917 0022 FFF7FEFF 		bl	tsk_ActvTsk
  76:../Tasks/MntrTest/RWR/Tasks.c ****     os_SCHEDULE();
 918              		.loc 1 76 0
 919 0026 FFF7FEFF 		bl	os_SCHEDULE
  77:../Tasks/MntrTest/RWR/Tasks.c **** }
 920              		.loc 1 77 0
 921 002a BD46     		mov	sp, r7
 922              		@ sp needed
 923 002c 80BD     		pop	{r7, pc}
 924              	.L54:
 925 002e C046     		.align	2
 926              	.L53:
 927 0030 00000000 		.word	tsk1
 928 0034 00000000 		.word	tsk_EndTheTask
 929 0038 24000000 		.word	tsk_AR+36
 930              		.cfi_endproc
 931              	.LFE71:
 933              		.section	.text.actvTsk2,"ax",%progbits
 934              		.align	2
 935              		.global	actvTsk2
 936              		.code	16
 937              		.thumb_func
 939              	actvTsk2:
 940              	.LFB72:
  78:../Tasks/MntrTest/RWR/Tasks.c **** void actvTsk2( void )
  79:../Tasks/MntrTest/RWR/Tasks.c **** {
 941              		.loc 1 79 0
 942              		.cfi_startproc
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
  80:../Tasks/MntrTest/RWR/Tasks.c ****     tsk_tskInit( (TskID) 0x2u, &tsk2, &tsk_EndTheTask, MY_STACK_SIZE );
 949              		.loc 1 80 0
 950 0004 074A     		ldr	r2, .L56
 951 0006 084B     		ldr	r3, .L56+4
 952 0008 0220     		mov	r0, #2
 953 000a 111C     		mov	r1, r2
 954 000c 1A1C     		mov	r2, r3
 955 000e 8023     		mov	r3, #128
 956 0010 FFF7FEFF 		bl	tsk_tskInit
  81:../Tasks/MntrTest/RWR/Tasks.c ****     tsk_ActvTsk( &tsk_AR[(TskID) 0x2u] );
 957              		.loc 1 81 0
 958 0014 054B     		ldr	r3, .L56+8
 959 0016 181C     		mov	r0, r3
 960 0018 FFF7FEFF 		bl	tsk_ActvTsk
  82:../Tasks/MntrTest/RWR/Tasks.c ****     os_SCHEDULE();
 961              		.loc 1 82 0
 962 001c FFF7FEFF 		bl	os_SCHEDULE
  83:../Tasks/MntrTest/RWR/Tasks.c **** }
 963              		.loc 1 83 0
 964 0020 BD46     		mov	sp, r7
 965              		@ sp needed
 966 0022 80BD     		pop	{r7, pc}
 967              	.L57:
 968              		.align	2
 969              	.L56:
 970 0024 00000000 		.word	tsk2
 971 0028 00000000 		.word	tsk_EndTheTask
 972 002c 48000000 		.word	tsk_AR+72
 973              		.cfi_endproc
 974              	.LFE72:
 976              		.section	.text.OS_START,"ax",%progbits
 977              		.align	2
 978              		.global	OS_START
 979              		.code	16
 980              		.thumb_func
 982              	OS_START:
 983              	.LFB73:
  84:../Tasks/MntrTest/RWR/Tasks.c **** 
  85:../Tasks/MntrTest/RWR/Tasks.c **** void OS_START( void )
  86:../Tasks/MntrTest/RWR/Tasks.c **** {
 984              		.loc 1 86 0
 985              		.cfi_startproc
 986 0000 80B5     		push	{r7, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
  87:../Tasks/MntrTest/RWR/Tasks.c ****     sys_SysFkt[0].fktCallType.tmrFktCall.sysFktCall = &actvTsk1;
 992              		.loc 1 87 0
 993 0004 074B     		ldr	r3, .L59
 994 0006 084A     		ldr	r2, .L59+4
 995 0008 1A60     		str	r2, [r3]
  88:../Tasks/MntrTest/RWR/Tasks.c ****     sys_SysFkt[1].fktCallType.tmrFktCall.sysFktCall = &actvTsk2;
 996              		.loc 1 88 0
 997 000a 064B     		ldr	r3, .L59
 998 000c 074A     		ldr	r2, .L59+8
 999 000e DA60     		str	r2, [r3, #12]
  89:../Tasks/MntrTest/RWR/Tasks.c ****     tmr_setSysTimer( 0, 1000u, 0x1u );
 1000              		.loc 1 89 0
 1001 0010 FA23     		mov	r3, #250
 1002 0012 9B00     		lsl	r3, r3, #2
 1003 0014 0020     		mov	r0, #0
 1004 0016 191C     		mov	r1, r3
 1005 0018 0122     		mov	r2, #1
 1006 001a FFF7FEFF 		bl	tmr_setSysTimer
  90:../Tasks/MntrTest/RWR/Tasks.c ****     //tmr_setSysTimer( 1, 200u, 0x1u );
  91:../Tasks/MntrTest/RWR/Tasks.c **** }
 1007              		.loc 1 91 0
 1008 001e BD46     		mov	sp, r7
 1009              		@ sp needed
 1010 0020 80BD     		pop	{r7, pc}
 1011              	.L60:
 1012 0022 C046     		.align	2
 1013              	.L59:
 1014 0024 00000000 		.word	sys_SysFkt
 1015 0028 00000000 		.word	actvTsk1
 1016 002c 00000000 		.word	actvTsk2
 1017              		.cfi_endproc
 1018              	.LFE73:
 1020              		.text
 1021              	.Letext0:
 1022              		.file 3 "c:\\freescale\\kds_3.0.0\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1023              		.file 4 "c:\\freescale\\kds_3.0.0\\toolchain\\arm-none-eabi\\include\\stdint.h"
 1024              		.file 5 "../include/R_RTOS_inc.h"
 1025              		.file 6 "../hal/mcu/NXP_KL05/BSP/include/MKL05Z4.h"
 1026              		.file 7 "../hal/mcu/NXP_KL05/include/PortFunc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Tasks.c
             Tasks.s:18     .text.tsk1:00000000 $t
             Tasks.s:23     .text.tsk1:00000000 tsk1
             Tasks.s:437    .text.tsk1:00000160 $d
             Tasks.s:452    .text.tsk2:00000000 tsk2
             Tasks.s:667    .text.tsk3:00000000 tsk3
             Tasks.s:447    .text.tsk2:00000000 $t
             Tasks.s:655    .text.tsk2:000000cc $d
             Tasks.s:662    .text.tsk3:00000000 $t
             Tasks.s:880    .text.tsk3:000000dc $d
             Tasks.s:886    .text.actvTsk1:00000000 $t
             Tasks.s:891    .text.actvTsk1:00000000 actvTsk1
             Tasks.s:927    .text.actvTsk1:00000030 $d
             Tasks.s:934    .text.actvTsk2:00000000 $t
             Tasks.s:939    .text.actvTsk2:00000000 actvTsk2
             Tasks.s:970    .text.actvTsk2:00000024 $d
             Tasks.s:977    .text.OS_START:00000000 $t
             Tasks.s:982    .text.OS_START:00000000 OS_START
             Tasks.s:1014   .text.OS_START:00000024 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.R_RTOS_inc.h.33.36e72bb3967740da7c636d11072010d8
                           .group:00000000 wm4.R_RTOS_services.h.15.141ae7f3e634632683f7871b75760c07
                           .group:00000000 wm4.MKL05Z4.h.103.c5a242a6313ded8e4c7cb62acb8df21b
                           .group:00000000 wm4.core_cm0plus.h.43.8a4a713129c4559638c90873d349aea7
                           .group:00000000 wm4.core_cmInstr.h.39.983ab10f37e3e59f2988e58e0e4c2ffe
                           .group:00000000 wm4.core_cm0plus.h.155.59f470bcbcb3497af7bb725005dd1359
                           .group:00000000 wm4.system_MKL05Z4.h.101.1304ea5d52ecf5deae71ccb0772f8612
                           .group:00000000 wm4.MKL05Z4.h.274.69d105c645fb54a4873c1961c705a2ed
                           .group:00000000 wm4.PortFunc.h.29.2889e345d9a6356c605a78c7f6468978
                           .group:00000000 wm4.TimerFunc.h.9.adbda7f7862aad2ad31a4542ce2fb01d
                           .group:00000000 wm4.R_RTOS_timer.h.10.320a5c95a3ff82b6cc9c2ca1b54c86a1

UNDEFINED SYMBOLS
p_cur_tsk_tcb
tsk_EndTheTask
tsk_AR
tsk_tskInit
tsk_ChngePrio
tsk_ActvTsk
os_SCHEDULE
tmr_setSysTimer
sys_SysFkt
