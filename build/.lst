   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.tsk1,"ax",%progbits
  18              		.align	2
  19              		.global	tsk1
  20              		.code	16
  21              		.thumb_func
  23              	tsk1:
  24              	.LFB64:
  25              		.file 1 "../Tasks/MtxTest/Tasks.c"
   1:../Tasks/MtxTest/Tasks.c **** #include "R_RTOS_services.h"
   2:../Tasks/MtxTest/Tasks.c **** #include "PortFunc.h"
   3:../Tasks/MtxTest/Tasks.c **** #include "TimerFunc.h"
   4:../Tasks/MtxTest/Tasks.c **** 
   5:../Tasks/MtxTest/Tasks.c **** #include "R_RTOS_task.h"
   6:../Tasks/MtxTest/Tasks.c **** #include "R_RTOS_timer.h"
   7:../Tasks/MtxTest/Tasks.c **** 
   8:../Tasks/MtxTest/Tasks.c **** extern void tsk_EndTheTask( void );
   9:../Tasks/MtxTest/Tasks.c **** extern SysFkt sys_SysFkt[AMOUNT_SYS_FKT ];
  10:../Tasks/MtxTest/Tasks.c **** 
  11:../Tasks/MtxTest/Tasks.c **** extern TskTCB tsk_AR[];
  12:../Tasks/MtxTest/Tasks.c **** 
  13:../Tasks/MtxTest/Tasks.c **** void tsk1( void );
  14:../Tasks/MtxTest/Tasks.c **** void tsk2( void );
  15:../Tasks/MtxTest/Tasks.c **** 
  16:../Tasks/MtxTest/Tasks.c **** void tsk1( void )
  17:../Tasks/MtxTest/Tasks.c **** {
  26              		.loc 1 17 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  18:../Tasks/MtxTest/Tasks.c ****     SET_PIN_LOW(PIN_LED0);
  36              		.loc 1 18 0
  37 0006 504B     		ldr	r3, .L21
  38 0008 5A69     		ldr	r2, [r3, #20]
  39 000a 8023     		mov	r3, #128
  40 000c 5B00     		lsl	r3, r3, #1
  41 000e 1340     		and	r3, r2
  42 0010 06D0     		beq	.L3
  43              		.loc 1 18 0 is_stmt 0 discriminator 1
  44 0012 4D4B     		ldr	r3, .L21
  45 0014 4C4A     		ldr	r2, .L21
  46 0016 9268     		ldr	r2, [r2, #8]
  47 0018 8021     		mov	r1, #128
  48 001a 4900     		lsl	r1, r1, #1
  49 001c 0A43     		orr	r2, r1
  50 001e 9A60     		str	r2, [r3, #8]
  51              	.L3:
  52              	.LBB24:
  53              	.LBB25:
  54              		.file 2 "../include/R_RTOS_services.h"
   1:../include/R_RTOS_services.h **** /**
   2:../include/R_RTOS_services.h ****  * \file    R_RTOS_services.h
   3:../include/R_RTOS_services.h ****  * \author  Christian Neuberger (NeubergerCh50344@th-nuernberg.de)
   4:../include/R_RTOS_services.h ****  * \date    18.12.2015
   5:../include/R_RTOS_services.h ****  *
   6:../include/R_RTOS_services.h ****  * \brief Service calls, which can be used by/inside tasks
   7:../include/R_RTOS_services.h ****  */
   8:../include/R_RTOS_services.h **** 
   9:../include/R_RTOS_services.h **** #ifndef HEADERS_R_RTOS_SERVICES_H_
  10:../include/R_RTOS_services.h **** #define HEADERS_R_RTOS_SERVICES_H_
  11:../include/R_RTOS_services.h **** 
  12:../include/R_RTOS_services.h **** #include "R_RTOS_inc.h"
  13:../include/R_RTOS_services.h **** 
  14:../include/R_RTOS_services.h **** #ifndef __STATIC_INLINE
  15:../include/R_RTOS_services.h **** #define __STATIC_INLINE  static inline
  16:../include/R_RTOS_services.h **** #endif
  17:../include/R_RTOS_services.h **** 
  18:../include/R_RTOS_services.h **** /** \def INPUT_ARG_1(input)
  19:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the first input argument for a following function call.
  20:../include/R_RTOS_services.h ****  *
  21:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  22:../include/R_RTOS_services.h ****  *
  23:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  24:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  25:../include/R_RTOS_services.h ****  *
  26:../include/R_RTOS_services.h ****  *  The first argument will be stored in R0.
  27:../include/R_RTOS_services.h ****  */
  28:../include/R_RTOS_services.h **** #define INPUT_ARG_1(input)  __asm volatile( "movs r0, %0 \n"::"l"(input) :)
  29:../include/R_RTOS_services.h **** 
  30:../include/R_RTOS_services.h **** /** \def INPUT_ARG_2(input)
  31:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the second input argument for a following function call.
  32:../include/R_RTOS_services.h ****  *
  33:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  34:../include/R_RTOS_services.h ****  *
  35:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  36:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  37:../include/R_RTOS_services.h ****  *
  38:../include/R_RTOS_services.h ****  *  The second argument will be stored in R1.
  39:../include/R_RTOS_services.h ****  */
  40:../include/R_RTOS_services.h **** #define INPUT_ARG_2(input)  __asm volatile( "movs r1, %0 \n"::"l"(input) :)
  41:../include/R_RTOS_services.h **** 
  42:../include/R_RTOS_services.h **** /** \def INPUT_ARG_3(input)
  43:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the third input argument for a following function call.
  44:../include/R_RTOS_services.h ****  *
  45:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  46:../include/R_RTOS_services.h ****  *
  47:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  48:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  49:../include/R_RTOS_services.h ****  *
  50:../include/R_RTOS_services.h ****  *  The third argument will be stored in R2.
  51:../include/R_RTOS_services.h ****  */
  52:../include/R_RTOS_services.h **** #define INPUT_ARG_3(input)  __asm volatile( "movs r2, %0 \n"::"l"(input) :)
  53:../include/R_RTOS_services.h **** 
  54:../include/R_RTOS_services.h **** /** \def INPUT_ARG_4(input)
  55:../include/R_RTOS_services.h ****  *  \brief Sets \a input as the fourth input argument for a following function call.
  56:../include/R_RTOS_services.h ****  *
  57:../include/R_RTOS_services.h ****  *  \param  [in]    input  input argument - max uint32_t
  58:../include/R_RTOS_services.h ****  *
  59:../include/R_RTOS_services.h ****  *  When a function is called the Parameters are passed through the the registers r0-r3.
  60:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function call, one can manually put the arguments into 
  61:../include/R_RTOS_services.h ****  *
  62:../include/R_RTOS_services.h ****  *  The fourth argument will be stored in R3.
  63:../include/R_RTOS_services.h ****  */
  64:../include/R_RTOS_services.h **** #define INPUT_ARG_4(input)  __asm volatile( "movs r3, %0 \n"::"l"(input) :)
  65:../include/R_RTOS_services.h **** 
  66:../include/R_RTOS_services.h **** /** \def OUTPUT_ARG(output)
  67:../include/R_RTOS_services.h ****  *  \brief Retrieves an return value from a preceding function call and stores it into \a output.
  68:../include/R_RTOS_services.h ****  *
  69:../include/R_RTOS_services.h ****  *  \param  [out]   output  output argument - max uint32_t
  70:../include/R_RTOS_services.h ****  *
  71:../include/R_RTOS_services.h ****  *  When a function returns the return value is stored in r0.
  72:../include/R_RTOS_services.h ****  *  To mimic the behavior of such a regular function return, one can manually retrieve the return v
  73:../include/R_RTOS_services.h ****  *  Register r0 is the last valued pushed onto the stack, thus it is the first value to pop off the
  74:../include/R_RTOS_services.h ****  */
  75:../include/R_RTOS_services.h **** #define OUTPUT_ARG(output)  __asm volatile( "mrs     r1,     msp \n ldr r0, [r1] \n movs %0, r0 \n"
  76:../include/R_RTOS_services.h **** 
  77:../include/R_RTOS_services.h **** /** \def SVC( svcCode )
  78:../include/R_RTOS_services.h ****  *  \brief SVC Call with the given \a svcCode.
  79:../include/R_RTOS_services.h ****  *
  80:../include/R_RTOS_services.h ****  *  \param  [in]    svcCode  number of the SVC Call to be called
  81:../include/R_RTOS_services.h ****  *
  82:../include/R_RTOS_services.h ****  *  To make a SuperVisorCall the svc instruction has to be executed.
  83:../include/R_RTOS_services.h ****  *  A byte value can be passed alongside to further distinct the requested service.
  84:../include/R_RTOS_services.h ****  */
  85:../include/R_RTOS_services.h **** #define SVC( svcCode )      __asm volatile( "svc %[svc_code] \n" : : [svc_code]"I"(svcCode) : )
  86:../include/R_RTOS_services.h **** 
  87:../include/R_RTOS_services.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void svc_os_StartOS( void )
  88:../include/R_RTOS_services.h **** {
  89:../include/R_RTOS_services.h ****     SVC( SVC_OS_START );
  90:../include/R_RTOS_services.h ****     while ( 1 )
  91:../include/R_RTOS_services.h ****     {
  92:../include/R_RTOS_services.h ****         ;
  93:../include/R_RTOS_services.h ****     }
  94:../include/R_RTOS_services.h **** }
  95:../include/R_RTOS_services.h **** 
  96:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_InitTsk(
  97:../include/R_RTOS_services.h ****                                                                          const TskID tskID,
  98:../include/R_RTOS_services.h ****                                                                          const TskStartAddr const t
  99:../include/R_RTOS_services.h ****                                                                          const TskStartAddr const t
 100:../include/R_RTOS_services.h ****                                                                          const StackSize stckSze )
 101:../include/R_RTOS_services.h **** {
 102:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 103:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskAddr );
 104:../include/R_RTOS_services.h ****     INPUT_ARG_3( tskEndAddr );
 105:../include/R_RTOS_services.h ****     INPUT_ARG_4( stckSze );
 106:../include/R_RTOS_services.h ****     SVC( SVC_TSK_INIT );
 107:../include/R_RTOS_services.h ****     RetCode returnVal;
 108:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 109:../include/R_RTOS_services.h ****     return returnVal;
 110:../include/R_RTOS_services.h **** }
 111:../include/R_RTOS_services.h **** 
 112:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_SetTskPrio(
 113:../include/R_RTOS_services.h ****                                                                             const TskID tskID,
 114:../include/R_RTOS_services.h ****                                                                             const TskPrio tskPrio )
 115:../include/R_RTOS_services.h **** {
 116:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 117:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskPrio );
 118:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SETPRIO );
 119:../include/R_RTOS_services.h ****     RetCode returnVal;
 120:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 121:../include/R_RTOS_services.h ****     return returnVal;
 122:../include/R_RTOS_services.h **** }
 123:../include/R_RTOS_services.h **** 
 124:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_ActvTsk(
 125:../include/R_RTOS_services.h ****                                                                          const TskID tskID )
 126:../include/R_RTOS_services.h **** {
 127:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 128:../include/R_RTOS_services.h ****     SVC( SVC_TSK_ACTV );
 129:../include/R_RTOS_services.h ****     RetCode returnVal;
 130:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 131:../include/R_RTOS_services.h ****     return returnVal;
 132:../include/R_RTOS_services.h **** }
 133:../include/R_RTOS_services.h **** 
 134:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_KillTsk(
 135:../include/R_RTOS_services.h ****                                                                          TskTCB* const tsk )
 136:../include/R_RTOS_services.h **** {
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 139:../include/R_RTOS_services.h ****     RetCode returnVal;
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 141:../include/R_RTOS_services.h ****     return returnVal;
 142:../include/R_RTOS_services.h **** }
 143:../include/R_RTOS_services.h **** 
 144:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_setTskCriticalState(
 145:../include/R_RTOS_services.h ****                                                                                      void )
 146:../include/R_RTOS_services.h **** {
 147:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SET_CRIT );
 148:../include/R_RTOS_services.h ****     RetCode returnVal;
 149:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 150:../include/R_RTOS_services.h ****     return returnVal;
 151:../include/R_RTOS_services.h **** }
 152:../include/R_RTOS_services.h **** 
 153:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tsk_resetTskCriticalState(
 154:../include/R_RTOS_services.h ****                                                                                        void )
 155:../include/R_RTOS_services.h **** {
 156:../include/R_RTOS_services.h ****     SVC( SVC_TSK_RESET_CRIT );
 157:../include/R_RTOS_services.h ****     RetCode returnVal;
 158:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 159:../include/R_RTOS_services.h ****     return returnVal;
 160:../include/R_RTOS_services.h **** }
 161:../include/R_RTOS_services.h **** 
 162:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mtx_TakeMtx(
 163:../include/R_RTOS_services.h ****                                                                          const MtxNr mtxNr,
 164:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk,
 165:../include/R_RTOS_services.h ****                                                                          const SysTicks maxTimeToWa
 166:../include/R_RTOS_services.h **** {
 167:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
  55              		.loc 2 167 0 is_stmt 1
  56 0020 0123     		mov	r3, #1
  57              	@ 167 "../include/R_RTOS_services.h" 1
  58 0022 181C     		movs r0, r3 
  59              	
  60              	@ 0 "" 2
 168:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
  61              		.loc 2 168 0
  62              		.code	16
  63 0024 494B     		ldr	r3, .L21+4
  64              	@ 168 "../include/R_RTOS_services.h" 1
  65 0026 191C     		movs r1, r3 
  66              	
  67              	@ 0 "" 2
 169:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
  68              		.loc 2 169 0
  69              		.code	16
  70 0028 6423     		mov	r3, #100
  71              	@ 169 "../include/R_RTOS_services.h" 1
  72 002a 1A1C     		movs r2, r3 
  73              	
  74              	@ 0 "" 2
 170:../include/R_RTOS_services.h ****     SVC( SVC_MTX_TAKE );
  75              		.loc 2 170 0
  76              	@ 170 "../include/R_RTOS_services.h" 1
  77 002c 07DF     		svc #7 
  78              	
  79              	@ 0 "" 2
 171:../include/R_RTOS_services.h ****     RetCode returnVal;
 172:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
  80              		.loc 2 172 0
  81              	@ 172 "../include/R_RTOS_services.h" 1
  82 002e EFF30881 		mrs     r1,     msp 
  83 0032 0868     	 ldr r0, [r1] 
  84 0034 021C     	 movs r2, r0 
  85              	
  86              	@ 0 "" 2
  87              		.code	16
  88 0036 FB1D     		add	r3, r7, #7
  89 0038 1A70     		strb	r2, [r3]
  90              	.LBE25:
  91              	.LBE24:
  19:../Tasks/MtxTest/Tasks.c ****     svc_mtx_TakeMtx( (MtxNr) 0x1u, &tsk_AR[1], 100 );
  20:../Tasks/MtxTest/Tasks.c ****     SET_PIN_HIGH(PIN_LED0);
  92              		.loc 1 20 0
  93 003a 434B     		ldr	r3, .L21
  94 003c 5A69     		ldr	r2, [r3, #20]
  95 003e 8023     		mov	r3, #128
  96 0040 5B00     		lsl	r3, r3, #1
  97 0042 1340     		and	r3, r2
  98 0044 06D0     		beq	.L6
  99              		.loc 1 20 0 is_stmt 0 discriminator 1
 100 0046 404B     		ldr	r3, .L21
 101 0048 3F4A     		ldr	r2, .L21
 102 004a 5268     		ldr	r2, [r2, #4]
 103 004c 8021     		mov	r1, #128
 104 004e 4900     		lsl	r1, r1, #1
 105 0050 0A43     		orr	r2, r1
 106 0052 5A60     		str	r2, [r3, #4]
 107              	.L6:
  21:../Tasks/MtxTest/Tasks.c **** 
  22:../Tasks/MtxTest/Tasks.c ****     SET_PIN_LOW( PIN_LED1 );
 108              		.loc 1 22 0 is_stmt 1
 109 0054 3C4B     		ldr	r3, .L21
 110 0056 5A69     		ldr	r2, [r3, #20]
 111 0058 8023     		mov	r3, #128
 112 005a 9B00     		lsl	r3, r3, #2
 113 005c 1340     		and	r3, r2
 114 005e 06D0     		beq	.L8
 115              		.loc 1 22 0 is_stmt 0 discriminator 1
 116 0060 394B     		ldr	r3, .L21
 117 0062 394A     		ldr	r2, .L21
 118 0064 9268     		ldr	r2, [r2, #8]
 119 0066 8021     		mov	r1, #128
 120 0068 8900     		lsl	r1, r1, #2
 121 006a 0A43     		orr	r2, r1
 122 006c 9A60     		str	r2, [r3, #8]
 123              	.L8:
  23:../Tasks/MtxTest/Tasks.c ****     SET_PIN_LOW( PIN_LED2 );
 124              		.loc 1 23 0 is_stmt 1
 125 006e 364B     		ldr	r3, .L21
 126 0070 5A69     		ldr	r2, [r3, #20]
 127 0072 8023     		mov	r3, #128
 128 0074 DB00     		lsl	r3, r3, #3
 129 0076 1340     		and	r3, r2
 130 0078 06D0     		beq	.L10
 131              		.loc 1 23 0 is_stmt 0 discriminator 1
 132 007a 334B     		ldr	r3, .L21
 133 007c 324A     		ldr	r2, .L21
 134 007e 9268     		ldr	r2, [r2, #8]
 135 0080 8021     		mov	r1, #128
 136 0082 C900     		lsl	r1, r1, #3
 137 0084 0A43     		orr	r2, r1
 138 0086 9A60     		str	r2, [r3, #8]
 139              	.L10:
 140              	.LBB26:
 141              	.LBB27:
 102:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 142              		.loc 2 102 0 is_stmt 1
 143 0088 0223     		mov	r3, #2
 144              	@ 102 "../include/R_RTOS_services.h" 1
 145 008a 181C     		movs r0, r3 
 146              	
 147              	@ 0 "" 2
 103:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskAddr );
 148              		.loc 2 103 0
 149              		.code	16
 150 008c 304B     		ldr	r3, .L21+8
 151              	@ 103 "../include/R_RTOS_services.h" 1
 152 008e 191C     		movs r1, r3 
 153              	
 154              	@ 0 "" 2
 104:../include/R_RTOS_services.h ****     INPUT_ARG_3( tskEndAddr );
 155              		.loc 2 104 0
 156              		.code	16
 157 0090 304B     		ldr	r3, .L21+12
 158              	@ 104 "../include/R_RTOS_services.h" 1
 159 0092 1A1C     		movs r2, r3 
 160              	
 161              	@ 0 "" 2
 105:../include/R_RTOS_services.h ****     INPUT_ARG_4( stckSze );
 162              		.loc 2 105 0
 163              		.code	16
 164 0094 8023     		mov	r3, #128
 165              	@ 105 "../include/R_RTOS_services.h" 1
 166 0096 1B1C     		movs r3, r3 
 167              	
 168              	@ 0 "" 2
 106:../include/R_RTOS_services.h ****     SVC( SVC_TSK_INIT );
 169              		.loc 2 106 0
 170              	@ 106 "../include/R_RTOS_services.h" 1
 171 0098 01DF     		svc #1 
 172              	
 173              	@ 0 "" 2
 108:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 174              		.loc 2 108 0
 175              	@ 108 "../include/R_RTOS_services.h" 1
 176 009a EFF30881 		mrs     r1,     msp 
 177 009e 0868     	 ldr r0, [r1] 
 178 00a0 021C     	 movs r2, r0 
 179              	
 180              	@ 0 "" 2
 181              		.code	16
 182 00a2 BB1D     		add	r3, r7, #6
 183 00a4 1A70     		strb	r2, [r3]
 184              	.LBE27:
 185              	.LBE26:
 186              	.LBB28:
 187              	.LBB29:
 116:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 188              		.loc 2 116 0
 189 00a6 0223     		mov	r3, #2
 190              	@ 116 "../include/R_RTOS_services.h" 1
 191 00a8 181C     		movs r0, r3 
 192              	
 193              	@ 0 "" 2
 117:../include/R_RTOS_services.h ****     INPUT_ARG_2( tskPrio );
 194              		.loc 2 117 0
 195              		.code	16
 196 00aa 0623     		mov	r3, #6
 197              	@ 117 "../include/R_RTOS_services.h" 1
 198 00ac 191C     		movs r1, r3 
 199              	
 200              	@ 0 "" 2
 118:../include/R_RTOS_services.h ****     SVC( SVC_TSK_SETPRIO );
 201              		.loc 2 118 0
 202              	@ 118 "../include/R_RTOS_services.h" 1
 203 00ae 02DF     		svc #2 
 204              	
 205              	@ 0 "" 2
 120:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 206              		.loc 2 120 0
 207              	@ 120 "../include/R_RTOS_services.h" 1
 208 00b0 EFF30881 		mrs     r1,     msp 
 209 00b4 0868     	 ldr r0, [r1] 
 210 00b6 021C     	 movs r2, r0 
 211              	
 212              	@ 0 "" 2
 213              		.code	16
 214 00b8 7B1D     		add	r3, r7, #5
 215 00ba 1A70     		strb	r2, [r3]
 216              	.LBE29:
 217              	.LBE28:
 218              	.LBB30:
 219              	.LBB31:
 127:../include/R_RTOS_services.h ****     INPUT_ARG_1( tskID );
 220              		.loc 2 127 0
 221 00bc 0223     		mov	r3, #2
 222              	@ 127 "../include/R_RTOS_services.h" 1
 223 00be 181C     		movs r0, r3 
 224              	
 225              	@ 0 "" 2
 128:../include/R_RTOS_services.h ****     SVC( SVC_TSK_ACTV );
 226              		.loc 2 128 0
 227              	@ 128 "../include/R_RTOS_services.h" 1
 228 00c0 03DF     		svc #3 
 229              	
 230              	@ 0 "" 2
 130:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 231              		.loc 2 130 0
 232              	@ 130 "../include/R_RTOS_services.h" 1
 233 00c2 EFF30881 		mrs     r1,     msp 
 234 00c6 0868     	 ldr r0, [r1] 
 235 00c8 021C     	 movs r2, r0 
 236              	
 237              	@ 0 "" 2
 238              		.code	16
 239 00ca 3B1D     		add	r3, r7, #4
 240 00cc 1A70     		strb	r2, [r3]
 241              	.LBE31:
 242              	.LBE30:
  24:../Tasks/MtxTest/Tasks.c **** 
  25:../Tasks/MtxTest/Tasks.c ****     svc_tsk_InitTsk( (TskID) 0x2u, &tsk2, &tsk_EndTheTask, MY_STACK_SIZE );
  26:../Tasks/MtxTest/Tasks.c ****     svc_tsk_SetTskPrio( (TskID) 0x2u, TSK_PRIO_HIG );
  27:../Tasks/MtxTest/Tasks.c ****     svc_tsk_ActvTsk( (TskID) 0x2u );
  28:../Tasks/MtxTest/Tasks.c **** 
  29:../Tasks/MtxTest/Tasks.c ****     SET_PIN_HIGH( PIN_LED1 );
 243              		.loc 1 29 0
 244 00ce 1E4B     		ldr	r3, .L21
 245 00d0 5A69     		ldr	r2, [r3, #20]
 246 00d2 8023     		mov	r3, #128
 247 00d4 9B00     		lsl	r3, r3, #2
 248 00d6 1340     		and	r3, r2
 249 00d8 06D0     		beq	.L15
 250              		.loc 1 29 0 is_stmt 0 discriminator 1
 251 00da 1B4B     		ldr	r3, .L21
 252 00dc 1A4A     		ldr	r2, .L21
 253 00de 5268     		ldr	r2, [r2, #4]
 254 00e0 8021     		mov	r1, #128
 255 00e2 8900     		lsl	r1, r1, #2
 256 00e4 0A43     		orr	r2, r1
 257 00e6 5A60     		str	r2, [r3, #4]
 258              	.L15:
 259              	.LBB32:
 260              	.LBB33:
 173:../include/R_RTOS_services.h ****     return returnVal;
 174:../include/R_RTOS_services.h **** }
 175:../include/R_RTOS_services.h **** 
 176:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_mtx_GiveMtx(
 177:../include/R_RTOS_services.h ****                                                                          const MtxNr mtxNr,
 178:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk )
 179:../include/R_RTOS_services.h **** {
 180:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
 181:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 182:../include/R_RTOS_services.h ****     SVC( SVC_MTX_GIVE );
 183:../include/R_RTOS_services.h ****     RetCode returnVal;
 184:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 185:../include/R_RTOS_services.h ****     return returnVal;
 186:../include/R_RTOS_services.h **** }
 187:../include/R_RTOS_services.h **** 
 188:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_sem_TakeSem(
 189:../include/R_RTOS_services.h ****                                                                          const SemNr semNr,
 190:../include/R_RTOS_services.h ****                                                                          TskTCB* const tsk,
 191:../include/R_RTOS_services.h ****                                                                          const SysTicks maxTimeToWa
 192:../include/R_RTOS_services.h **** {
 193:../include/R_RTOS_services.h ****     INPUT_ARG_1( semNr );
 194:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 195:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
 196:../include/R_RTOS_services.h ****     SVC( SVC_SEM_TAKE );
 197:../include/R_RTOS_services.h ****     RetCode returnVal;
 198:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 199:../include/R_RTOS_services.h ****     return returnVal;
 200:../include/R_RTOS_services.h **** }
 201:../include/R_RTOS_services.h **** 
 202:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_sem_GiveSem(
 203:../include/R_RTOS_services.h ****                                                                          const SemNr semNr,
 204:../include/R_RTOS_services.h ****                                                                          TskTCB* const tsk )
 205:../include/R_RTOS_services.h **** {
 206:../include/R_RTOS_services.h ****     INPUT_ARG_1( semNr );
 207:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 208:../include/R_RTOS_services.h ****     SVC( SVC_SEM_GIVE );
 209:../include/R_RTOS_services.h ****     RetCode returnVal;
 210:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 211:../include/R_RTOS_services.h ****     return returnVal;
 212:../include/R_RTOS_services.h **** }
 213:../include/R_RTOS_services.h **** 
 214:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_evt_SendEvt(
 215:../include/R_RTOS_services.h ****                                                                          const EvtNr evt )
 216:../include/R_RTOS_services.h **** {
 217:../include/R_RTOS_services.h ****     INPUT_ARG_1( evt );
 218:../include/R_RTOS_services.h ****     SVC( SVC_EVT_SEND );
 219:../include/R_RTOS_services.h ****     RetCode returnVal;
 220:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 221:../include/R_RTOS_services.h ****     return returnVal;
 222:../include/R_RTOS_services.h **** }
 223:../include/R_RTOS_services.h **** 
 224:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_evt_RecvEvt(
 225:../include/R_RTOS_services.h ****                                                                          PTskTCB const tsk,
 226:../include/R_RTOS_services.h ****                                                                          EVTQSlots evtMask,
 227:../include/R_RTOS_services.h ****                                                                          const SysTicks maxTimeToWa
 228:../include/R_RTOS_services.h **** {
 229:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 230:../include/R_RTOS_services.h ****     INPUT_ARG_2( evtMask );
 231:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
 232:../include/R_RTOS_services.h ****     SVC( SVC_EVT_RECV );
 233:../include/R_RTOS_services.h ****     RetCode returnVal;
 234:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 235:../include/R_RTOS_services.h ****     return returnVal;
 236:../include/R_RTOS_services.h **** }
 237:../include/R_RTOS_services.h **** 
 238:../include/R_RTOS_services.h **** __attribute__( ( always_inline ))  __STATIC_INLINE RetCode svc_tmr_SetTimer(
 239:../include/R_RTOS_services.h ****                                                                           const WaitTime msToWait,
 240:../include/R_RTOS_services.h ****                                                                           TskTCB* const tsk )
 241:../include/R_RTOS_services.h **** {
 242:../include/R_RTOS_services.h ****     INPUT_ARG_1( msToWait );
 261              		.loc 2 242 0 is_stmt 1
 262 00e8 FA23     		mov	r3, #250
 263 00ea 5B00     		lsl	r3, r3, #1
 264              	@ 242 "../include/R_RTOS_services.h" 1
 265 00ec 181C     		movs r0, r3 
 266              	
 267              	@ 0 "" 2
 243:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 268              		.loc 2 243 0
 269              		.code	16
 270 00ee 174B     		ldr	r3, .L21+4
 271              	@ 243 "../include/R_RTOS_services.h" 1
 272 00f0 191C     		movs r1, r3 
 273              	
 274              	@ 0 "" 2
 244:../include/R_RTOS_services.h ****     SVC( SVC_TMR_SET );
 275              		.loc 2 244 0
 276              	@ 244 "../include/R_RTOS_services.h" 1
 277 00f2 0DDF     		svc #13 
 278              	
 279              	@ 0 "" 2
 245:../include/R_RTOS_services.h ****     RetCode returnVal;
 246:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 280              		.loc 2 246 0
 281              	@ 246 "../include/R_RTOS_services.h" 1
 282 00f4 EFF30881 		mrs     r1,     msp 
 283 00f8 0868     	 ldr r0, [r1] 
 284 00fa 021C     	 movs r2, r0 
 285              	
 286              	@ 0 "" 2
 287              		.code	16
 288 00fc FB1C     		add	r3, r7, #3
 289 00fe 1A70     		strb	r2, [r3]
 290              	.LBE33:
 291              	.LBE32:
 292              	.LBB34:
 293              	.LBB35:
 180:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
 294              		.loc 2 180 0
 295 0100 0123     		mov	r3, #1
 296              	@ 180 "../include/R_RTOS_services.h" 1
 297 0102 181C     		movs r0, r3 
 298              	
 299              	@ 0 "" 2
 181:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 300              		.loc 2 181 0
 301              		.code	16
 302 0104 114B     		ldr	r3, .L21+4
 303              	@ 181 "../include/R_RTOS_services.h" 1
 304 0106 191C     		movs r1, r3 
 305              	
 306              	@ 0 "" 2
 182:../include/R_RTOS_services.h ****     SVC( SVC_MTX_GIVE );
 307              		.loc 2 182 0
 308              	@ 182 "../include/R_RTOS_services.h" 1
 309 0108 08DF     		svc #8 
 310              	
 311              	@ 0 "" 2
 184:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 312              		.loc 2 184 0
 313              	@ 184 "../include/R_RTOS_services.h" 1
 314 010a EFF30881 		mrs     r1,     msp 
 315 010e 0868     	 ldr r0, [r1] 
 316 0110 021C     	 movs r2, r0 
 317              	
 318              	@ 0 "" 2
 319              		.code	16
 320 0112 BB1C     		add	r3, r7, #2
 321 0114 1A70     		strb	r2, [r3]
 322              	.LBE35:
 323              	.LBE34:
  30:../Tasks/MtxTest/Tasks.c ****     svc_tmr_SetTimer( (WaitTime) 500, &tsk_AR[1] );
  31:../Tasks/MtxTest/Tasks.c **** 
  32:../Tasks/MtxTest/Tasks.c ****     svc_mtx_GiveMtx( (MtxNr) 0x1u, &tsk_AR[1] );
  33:../Tasks/MtxTest/Tasks.c **** 
  34:../Tasks/MtxTest/Tasks.c ****     SET_PIN_HIGH( PIN_LED2 );
 324              		.loc 1 34 0
 325 0116 0C4B     		ldr	r3, .L21
 326 0118 5A69     		ldr	r2, [r3, #20]
 327 011a 8023     		mov	r3, #128
 328 011c DB00     		lsl	r3, r3, #3
 329 011e 1340     		and	r3, r2
 330 0120 06D0     		beq	.L19
 331              		.loc 1 34 0 is_stmt 0 discriminator 1
 332 0122 094B     		ldr	r3, .L21
 333 0124 084A     		ldr	r2, .L21
 334 0126 5268     		ldr	r2, [r2, #4]
 335 0128 8021     		mov	r1, #128
 336 012a C900     		lsl	r1, r1, #3
 337 012c 0A43     		orr	r2, r1
 338 012e 5A60     		str	r2, [r3, #4]
 339              	.L19:
 340              	.LBB36:
 341              	.LBB37:
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 342              		.loc 2 137 0 is_stmt 1
 343 0130 064B     		ldr	r3, .L21+4
 344              	@ 137 "../include/R_RTOS_services.h" 1
 345 0132 181C     		movs r0, r3 
 346              	
 347              	@ 0 "" 2
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 348              		.loc 2 138 0
 349              	@ 138 "../include/R_RTOS_services.h" 1
 350 0134 04DF     		svc #4 
 351              	
 352              	@ 0 "" 2
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 353              		.loc 2 140 0
 354              	@ 140 "../include/R_RTOS_services.h" 1
 355 0136 EFF30881 		mrs     r1,     msp 
 356 013a 0868     	 ldr r0, [r1] 
 357 013c 021C     	 movs r2, r0 
 358              	
 359              	@ 0 "" 2
 360              		.code	16
 361 013e 7B1C     		add	r3, r7, #1
 362 0140 1A70     		strb	r2, [r3]
 363              	.LBE37:
 364              	.LBE36:
  35:../Tasks/MtxTest/Tasks.c ****     svc_tsk_KillTsk( &tsk_AR[1] );
  36:../Tasks/MtxTest/Tasks.c **** }
 365              		.loc 1 36 0
 366 0142 BD46     		mov	sp, r7
 367 0144 02B0     		add	sp, sp, #8
 368              		@ sp needed
 369 0146 80BD     		pop	{r7, pc}
 370              	.L22:
 371              		.align	2
 372              	.L21:
 373 0148 00F00F40 		.word	1074786304
 374 014c 24000000 		.word	tsk_AR+36
 375 0150 00000000 		.word	tsk2
 376 0154 00000000 		.word	tsk_EndTheTask
 377              		.cfi_endproc
 378              	.LFE64:
 380              		.section	.text.tsk2,"ax",%progbits
 381              		.align	2
 382              		.global	tsk2
 383              		.code	16
 384              		.thumb_func
 386              	tsk2:
 387              	.LFB65:
  37:../Tasks/MtxTest/Tasks.c **** void tsk2( void )
  38:../Tasks/MtxTest/Tasks.c **** {
 388              		.loc 1 38 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
  39:../Tasks/MtxTest/Tasks.c ****     SET_PIN_LOW( PIN_LED3 );
 398              		.loc 1 39 0
 399 0006 254B     		ldr	r3, .L32
 400 0008 5A69     		ldr	r2, [r3, #20]
 401 000a 8023     		mov	r3, #128
 402 000c 1B01     		lsl	r3, r3, #4
 403 000e 1340     		and	r3, r2
 404 0010 06D0     		beq	.L25
 405              		.loc 1 39 0 is_stmt 0 discriminator 1
 406 0012 224B     		ldr	r3, .L32
 407 0014 214A     		ldr	r2, .L32
 408 0016 9268     		ldr	r2, [r2, #8]
 409 0018 8021     		mov	r1, #128
 410 001a 0901     		lsl	r1, r1, #4
 411 001c 0A43     		orr	r2, r1
 412 001e 9A60     		str	r2, [r3, #8]
 413              	.L25:
 414              	.LBB38:
 415              	.LBB39:
 167:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
 416              		.loc 2 167 0 is_stmt 1
 417 0020 0123     		mov	r3, #1
 418              	@ 167 "../include/R_RTOS_services.h" 1
 419 0022 181C     		movs r0, r3 
 420              	
 421              	@ 0 "" 2
 168:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 422              		.loc 2 168 0
 423              		.code	16
 424 0024 1E4B     		ldr	r3, .L32+4
 425              	@ 168 "../include/R_RTOS_services.h" 1
 426 0026 191C     		movs r1, r3 
 427              	
 428              	@ 0 "" 2
 169:../include/R_RTOS_services.h ****     INPUT_ARG_3( maxTimeToWait );
 429              		.loc 2 169 0
 430              		.code	16
 431 0028 6423     		mov	r3, #100
 432              	@ 169 "../include/R_RTOS_services.h" 1
 433 002a 1A1C     		movs r2, r3 
 434              	
 435              	@ 0 "" 2
 170:../include/R_RTOS_services.h ****     SVC( SVC_MTX_TAKE );
 436              		.loc 2 170 0
 437              	@ 170 "../include/R_RTOS_services.h" 1
 438 002c 07DF     		svc #7 
 439              	
 440              	@ 0 "" 2
 172:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 441              		.loc 2 172 0
 442              	@ 172 "../include/R_RTOS_services.h" 1
 443 002e EFF30881 		mrs     r1,     msp 
 444 0032 0868     	 ldr r0, [r1] 
 445 0034 021C     	 movs r2, r0 
 446              	
 447              	@ 0 "" 2
 448              		.code	16
 449 0036 FB1D     		add	r3, r7, #7
 450 0038 1A70     		strb	r2, [r3]
 451              	.LBE39:
 452              	.LBE38:
 453              	.LBB40:
 454              	.LBB41:
 242:../include/R_RTOS_services.h ****     INPUT_ARG_1( msToWait );
 455              		.loc 2 242 0
 456 003a FA23     		mov	r3, #250
 457 003c 5B00     		lsl	r3, r3, #1
 458              	@ 242 "../include/R_RTOS_services.h" 1
 459 003e 181C     		movs r0, r3 
 460              	
 461              	@ 0 "" 2
 243:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 462              		.loc 2 243 0
 463              		.code	16
 464 0040 174B     		ldr	r3, .L32+4
 465              	@ 243 "../include/R_RTOS_services.h" 1
 466 0042 191C     		movs r1, r3 
 467              	
 468              	@ 0 "" 2
 244:../include/R_RTOS_services.h ****     SVC( SVC_TMR_SET );
 469              		.loc 2 244 0
 470              	@ 244 "../include/R_RTOS_services.h" 1
 471 0044 0DDF     		svc #13 
 472              	
 473              	@ 0 "" 2
 474              		.loc 2 246 0
 475              	@ 246 "../include/R_RTOS_services.h" 1
 476 0046 EFF30881 		mrs     r1,     msp 
 477 004a 0868     	 ldr r0, [r1] 
 478 004c 021C     	 movs r2, r0 
 479              	
 480              	@ 0 "" 2
 481              		.code	16
 482 004e BB1D     		add	r3, r7, #6
 483 0050 1A70     		strb	r2, [r3]
 484              	.LBE41:
 485              	.LBE40:
  40:../Tasks/MtxTest/Tasks.c ****     svc_mtx_TakeMtx( (MtxNr) 0x1u, &tsk_AR[2], 100 );
  41:../Tasks/MtxTest/Tasks.c **** 
  42:../Tasks/MtxTest/Tasks.c **** 
  43:../Tasks/MtxTest/Tasks.c ****     svc_tmr_SetTimer( (WaitTime) 500, &tsk_AR[2] );
  44:../Tasks/MtxTest/Tasks.c ****     SET_PIN_HIGH( PIN_LED3 );
 486              		.loc 1 44 0
 487 0052 124B     		ldr	r3, .L32
 488 0054 5A69     		ldr	r2, [r3, #20]
 489 0056 8023     		mov	r3, #128
 490 0058 1B01     		lsl	r3, r3, #4
 491 005a 1340     		and	r3, r2
 492 005c 06D0     		beq	.L29
 493              		.loc 1 44 0 is_stmt 0 discriminator 1
 494 005e 0F4B     		ldr	r3, .L32
 495 0060 0E4A     		ldr	r2, .L32
 496 0062 5268     		ldr	r2, [r2, #4]
 497 0064 8021     		mov	r1, #128
 498 0066 0901     		lsl	r1, r1, #4
 499 0068 0A43     		orr	r2, r1
 500 006a 5A60     		str	r2, [r3, #4]
 501              	.L29:
 502              	.LBB42:
 503              	.LBB43:
 180:../include/R_RTOS_services.h ****     INPUT_ARG_1( mtxNr );
 504              		.loc 2 180 0 is_stmt 1
 505 006c 0123     		mov	r3, #1
 506              	@ 180 "../include/R_RTOS_services.h" 1
 507 006e 181C     		movs r0, r3 
 508              	
 509              	@ 0 "" 2
 181:../include/R_RTOS_services.h ****     INPUT_ARG_2( tsk );
 510              		.loc 2 181 0
 511              		.code	16
 512 0070 0B4B     		ldr	r3, .L32+4
 513              	@ 181 "../include/R_RTOS_services.h" 1
 514 0072 191C     		movs r1, r3 
 515              	
 516              	@ 0 "" 2
 182:../include/R_RTOS_services.h ****     SVC( SVC_MTX_GIVE );
 517              		.loc 2 182 0
 518              	@ 182 "../include/R_RTOS_services.h" 1
 519 0074 08DF     		svc #8 
 520              	
 521              	@ 0 "" 2
 184:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 522              		.loc 2 184 0
 523              	@ 184 "../include/R_RTOS_services.h" 1
 524 0076 EFF30881 		mrs     r1,     msp 
 525 007a 0868     	 ldr r0, [r1] 
 526 007c 021C     	 movs r2, r0 
 527              	
 528              	@ 0 "" 2
 529              		.code	16
 530 007e 7B1D     		add	r3, r7, #5
 531 0080 1A70     		strb	r2, [r3]
 532              	.LBE43:
 533              	.LBE42:
 534              	.LBB44:
 535              	.LBB45:
 137:../include/R_RTOS_services.h ****     INPUT_ARG_1( tsk );
 536              		.loc 2 137 0
 537 0082 074B     		ldr	r3, .L32+4
 538              	@ 137 "../include/R_RTOS_services.h" 1
 539 0084 181C     		movs r0, r3 
 540              	
 541              	@ 0 "" 2
 138:../include/R_RTOS_services.h ****     SVC( SVC_TSK_KILL );
 542              		.loc 2 138 0
 543              	@ 138 "../include/R_RTOS_services.h" 1
 544 0086 04DF     		svc #4 
 545              	
 546              	@ 0 "" 2
 140:../include/R_RTOS_services.h ****     OUTPUT_ARG( returnVal );
 547              		.loc 2 140 0
 548              	@ 140 "../include/R_RTOS_services.h" 1
 549 0088 EFF30881 		mrs     r1,     msp 
 550 008c 0868     	 ldr r0, [r1] 
 551 008e 021C     	 movs r2, r0 
 552              	
 553              	@ 0 "" 2
 554              		.code	16
 555 0090 3B1D     		add	r3, r7, #4
 556 0092 1A70     		strb	r2, [r3]
 557              	.LBE45:
 558              	.LBE44:
  45:../Tasks/MtxTest/Tasks.c **** 
  46:../Tasks/MtxTest/Tasks.c ****     svc_mtx_GiveMtx( (MtxNr) 0x1u, &tsk_AR[2] );
  47:../Tasks/MtxTest/Tasks.c **** 
  48:../Tasks/MtxTest/Tasks.c ****     svc_tsk_KillTsk( &tsk_AR[2] );
  49:../Tasks/MtxTest/Tasks.c **** }
 559              		.loc 1 49 0
 560 0094 BD46     		mov	sp, r7
 561 0096 02B0     		add	sp, sp, #8
 562              		@ sp needed
 563 0098 80BD     		pop	{r7, pc}
 564              	.L33:
 565 009a C046     		.align	2
 566              	.L32:
 567 009c 00F00F40 		.word	1074786304
 568 00a0 48000000 		.word	tsk_AR+72
 569              		.cfi_endproc
 570              	.LFE65:
 572              		.section	.text.actvTsk1,"ax",%progbits
 573              		.align	2
 574              		.global	actvTsk1
 575              		.code	16
 576              		.thumb_func
 578              	actvTsk1:
 579              	.LFB66:
  50:../Tasks/MtxTest/Tasks.c **** 
  51:../Tasks/MtxTest/Tasks.c **** void actvTsk1( void )
  52:../Tasks/MtxTest/Tasks.c **** {
 580              		.loc 1 52 0
 581              		.cfi_startproc
 582 0000 80B5     		push	{r7, lr}
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
  53:../Tasks/MtxTest/Tasks.c ****     tsk_tskInit( (TskID) 0x1u, &tsk1, &tsk_EndTheTask, MY_STACK_SIZE );
 588              		.loc 1 53 0
 589 0004 0A4A     		ldr	r2, .L35
 590 0006 0B4B     		ldr	r3, .L35+4
 591 0008 0120     		mov	r0, #1
 592 000a 111C     		mov	r1, r2
 593 000c 1A1C     		mov	r2, r3
 594 000e 8023     		mov	r3, #128
 595 0010 FFF7FEFF 		bl	tsk_tskInit
  54:../Tasks/MtxTest/Tasks.c ****     tsk_ChngePrio(&tsk_AR[0x1u],TSK_PRIO_MED);
 596              		.loc 1 54 0
 597 0014 084B     		ldr	r3, .L35+8
 598 0016 181C     		mov	r0, r3
 599 0018 0421     		mov	r1, #4
 600 001a FFF7FEFF 		bl	tsk_ChngePrio
  55:../Tasks/MtxTest/Tasks.c ****     tsk_ActvTsk( &tsk_AR[(TskID) 0x1u] );
 601              		.loc 1 55 0
 602 001e 064B     		ldr	r3, .L35+8
 603 0020 181C     		mov	r0, r3
 604 0022 FFF7FEFF 		bl	tsk_ActvTsk
  56:../Tasks/MtxTest/Tasks.c ****     os_SCHEDULE();
 605              		.loc 1 56 0
 606 0026 FFF7FEFF 		bl	os_SCHEDULE
  57:../Tasks/MtxTest/Tasks.c **** }
 607              		.loc 1 57 0
 608 002a BD46     		mov	sp, r7
 609              		@ sp needed
 610 002c 80BD     		pop	{r7, pc}
 611              	.L36:
 612 002e C046     		.align	2
 613              	.L35:
 614 0030 00000000 		.word	tsk1
 615 0034 00000000 		.word	tsk_EndTheTask
 616 0038 24000000 		.word	tsk_AR+36
 617              		.cfi_endproc
 618              	.LFE66:
 620              		.section	.text.actvTsk2,"ax",%progbits
 621              		.align	2
 622              		.global	actvTsk2
 623              		.code	16
 624              		.thumb_func
 626              	actvTsk2:
 627              	.LFB67:
  58:../Tasks/MtxTest/Tasks.c **** void actvTsk2( void )
  59:../Tasks/MtxTest/Tasks.c **** {
 628              		.loc 1 59 0
 629              		.cfi_startproc
 630 0000 80B5     		push	{r7, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 7, -8
 633              		.cfi_offset 14, -4
 634 0002 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
  60:../Tasks/MtxTest/Tasks.c ****     tsk_tskInit( (TskID) 0x2u, &tsk2, &tsk_EndTheTask, MY_STACK_SIZE );
 636              		.loc 1 60 0
 637 0004 074A     		ldr	r2, .L38
 638 0006 084B     		ldr	r3, .L38+4
 639 0008 0220     		mov	r0, #2
 640 000a 111C     		mov	r1, r2
 641 000c 1A1C     		mov	r2, r3
 642 000e 8023     		mov	r3, #128
 643 0010 FFF7FEFF 		bl	tsk_tskInit
  61:../Tasks/MtxTest/Tasks.c ****     tsk_ActvTsk( &tsk_AR[(TskID) 0x2u] );
 644              		.loc 1 61 0
 645 0014 054B     		ldr	r3, .L38+8
 646 0016 181C     		mov	r0, r3
 647 0018 FFF7FEFF 		bl	tsk_ActvTsk
  62:../Tasks/MtxTest/Tasks.c ****     os_SCHEDULE();
 648              		.loc 1 62 0
 649 001c FFF7FEFF 		bl	os_SCHEDULE
  63:../Tasks/MtxTest/Tasks.c **** }
 650              		.loc 1 63 0
 651 0020 BD46     		mov	sp, r7
 652              		@ sp needed
 653 0022 80BD     		pop	{r7, pc}
 654              	.L39:
 655              		.align	2
 656              	.L38:
 657 0024 00000000 		.word	tsk2
 658 0028 00000000 		.word	tsk_EndTheTask
 659 002c 48000000 		.word	tsk_AR+72
 660              		.cfi_endproc
 661              	.LFE67:
 663              		.section	.text.OS_START,"ax",%progbits
 664              		.align	2
 665              		.global	OS_START
 666              		.code	16
 667              		.thumb_func
 669              	OS_START:
 670              	.LFB68:
  64:../Tasks/MtxTest/Tasks.c **** 
  65:../Tasks/MtxTest/Tasks.c **** void OS_START( void )
  66:../Tasks/MtxTest/Tasks.c **** {
 671              		.loc 1 66 0
 672              		.cfi_startproc
 673 0000 80B5     		push	{r7, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
  67:../Tasks/MtxTest/Tasks.c ****     sys_SysFkt[0].fktCallType.tmrFktCall.sysFktCall = &actvTsk1;
 679              		.loc 1 67 0
 680 0004 064B     		ldr	r3, .L41
 681 0006 074A     		ldr	r2, .L41+4
 682 0008 1A60     		str	r2, [r3]
  68:../Tasks/MtxTest/Tasks.c ****     sys_SysFkt[1].fktCallType.tmrFktCall.sysFktCall = &actvTsk2;
 683              		.loc 1 68 0
 684 000a 054B     		ldr	r3, .L41
 685 000c 064A     		ldr	r2, .L41+8
 686 000e DA60     		str	r2, [r3, #12]
  69:../Tasks/MtxTest/Tasks.c ****     tmr_setSysTimer( 0, 1500u, 0x1u );
 687              		.loc 1 69 0
 688 0010 064B     		ldr	r3, .L41+12
 689 0012 0020     		mov	r0, #0
 690 0014 191C     		mov	r1, r3
 691 0016 0122     		mov	r2, #1
 692 0018 FFF7FEFF 		bl	tmr_setSysTimer
  70:../Tasks/MtxTest/Tasks.c ****     //tmr_setSysTimer( 1, 200u, 0x1u );
  71:../Tasks/MtxTest/Tasks.c **** }
 693              		.loc 1 71 0
 694 001c BD46     		mov	sp, r7
 695              		@ sp needed
 696 001e 80BD     		pop	{r7, pc}
 697              	.L42:
 698              		.align	2
 699              	.L41:
 700 0020 00000000 		.word	sys_SysFkt
 701 0024 00000000 		.word	actvTsk1
 702 0028 00000000 		.word	actvTsk2
 703 002c DC050000 		.word	1500
 704              		.cfi_endproc
 705              	.LFE68:
 707              		.text
 708              	.Letext0:
 709              		.file 3 "c:\\freescale\\kds_3.0.0\\toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 710              		.file 4 "c:\\freescale\\kds_3.0.0\\toolchain\\arm-none-eabi\\include\\stdint.h"
 711              		.file 5 "../include/R_RTOS_inc.h"
 712              		.file 6 "../hal/mcu/NXP_KL05/BSP/include/MKL05Z4.h"
 713              		.file 7 "../hal/mcu/NXP_KL05/include/PortFunc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Tasks.c
             Tasks.s:18     .text.tsk1:00000000 $t
             Tasks.s:23     .text.tsk1:00000000 tsk1
             Tasks.s:373    .text.tsk1:00000148 $d
             Tasks.s:386    .text.tsk2:00000000 tsk2
             Tasks.s:381    .text.tsk2:00000000 $t
             Tasks.s:567    .text.tsk2:0000009c $d
             Tasks.s:573    .text.actvTsk1:00000000 $t
             Tasks.s:578    .text.actvTsk1:00000000 actvTsk1
             Tasks.s:614    .text.actvTsk1:00000030 $d
             Tasks.s:621    .text.actvTsk2:00000000 $t
             Tasks.s:626    .text.actvTsk2:00000000 actvTsk2
             Tasks.s:657    .text.actvTsk2:00000024 $d
             Tasks.s:664    .text.OS_START:00000000 $t
             Tasks.s:669    .text.OS_START:00000000 OS_START
             Tasks.s:700    .text.OS_START:00000020 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.R_RTOS_inc.h.33.673e81b7c65bad7fa1d77c307c4a1d01
                           .group:00000000 wm4.R_RTOS_services.h.15.141ae7f3e634632683f7871b75760c07
                           .group:00000000 wm4.MKL05Z4.h.103.c5a242a6313ded8e4c7cb62acb8df21b
                           .group:00000000 wm4.core_cm0plus.h.43.8a4a713129c4559638c90873d349aea7
                           .group:00000000 wm4.core_cmInstr.h.39.983ab10f37e3e59f2988e58e0e4c2ffe
                           .group:00000000 wm4.core_cm0plus.h.155.59f470bcbcb3497af7bb725005dd1359
                           .group:00000000 wm4.system_MKL05Z4.h.101.1304ea5d52ecf5deae71ccb0772f8612
                           .group:00000000 wm4.MKL05Z4.h.274.69d105c645fb54a4873c1961c705a2ed
                           .group:00000000 wm4.PortFunc.h.29.2889e345d9a6356c605a78c7f6468978
                           .group:00000000 wm4.TimerFunc.h.9.adbda7f7862aad2ad31a4542ce2fb01d
                           .group:00000000 wm4.R_RTOS_timer.h.10.320a5c95a3ff82b6cc9c2ca1b54c86a1

UNDEFINED SYMBOLS
tsk_AR
tsk_EndTheTask
tsk_tskInit
tsk_ChngePrio
tsk_ActvTsk
os_SCHEDULE
tmr_setSysTimer
sys_SysFkt
